[ across, arrange, collect, distinct, everything,
filter, lag, mutate, select, tbl, ],
)
cli::cli_h2("Mois manquant(s) :")
cli::cli_h2("Vérification HAD DGF")
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> filter(annee != 2023 | periode != 5)
|> mutate(across(everything(), as.integer))
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
|> print(n = Inf)
)
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, select, tbl, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> filter(annee != 2023 | periode != 5)
|> mutate(across(everything(), as.integer))
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
|> print(n = Inf)
)
}
check_had_dgf()
check_had_dgf()
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, select, tbl, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> filter(annee != 2023 | periode != 5)
|> mutate(across(everything(), as.integer))
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
|> print(n = Inf)
|> invisible()
)
}
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, select, tbl, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> filter(annee != 2023 | periode != 5)
|> mutate(across(everything(), as.integer))
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
|> print(n = Inf)
|> invisible()
)
}
check_had_dgf()
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, select, tbl, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> filter(annee != 2023 | periode != 5)
|> mutate(across(everything(), as.integer))
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
|> print(n = Inf)
)
invisible(NULL)
}
check_had_dgf()
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, select, tbl, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> mutate(across(everything(), as.integer))
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
|> print(n = Inf)
)
invisible(NULL)
}
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, select, tbl, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> mutate(across(everything(), as.integer))
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
|> print(n = Inf)
)
invisible(NULL)
}
check_had_dgf()
cli::cli_alert_success("xx")
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_alert_success, cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, pull, select, tbl, ],
glue
[ glue, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> mutate(across(everything(), as.integer))
) -> temp
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
) -> result
if (nrow(result) == 0) {
start_year <- min(temp$annee)
end_year <- max(temp$annee)
start_period <- min(temp |> filter(annee == start_year) |> pull(periode))
end_period <- max(temp |> filter(annee == end_year) |> pull(periode))
cli_alert_success(
glue(
"Aucun mois manquant entre {start_year} et {end_year}")
)
}
invisible(NULL)
}
check_had_dgf()
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_alert_success, cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, pull, select, tbl, ],
glue
[ glue, ],
)
cli::cli_h1("Vérification HAD DGF")
cli::cli_h2("Mois manquant(s)")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> mutate(across(everything(), as.integer))
) -> temp
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
) -> result
if (nrow(result) == 0) {
start_year <- min(temp$annee)
end_year <- max(temp$annee)
start_period <- min(temp |> filter(annee == start_year) |> pull(periode))
end_period <- max(temp |> filter(annee == end_year) |> pull(periode))
cli_alert_success(
glue(
"Aucun mois manquant entre M{start_period} {start_year} et M{end_period} {end_year}")
)
}
invisible(NULL)
}
check_had_dgf()
#' @export
check_had_dgf <- function() {
box::use(
cli
[ cli_alert_success, cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, pull, select, tbl, ],
glue
[ glue, ],
)
cli::cli_h1("Vérification HAD DGF")
(
had_dgf()
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> mutate(across(everything(), as.integer))
) -> temp
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
) -> result
if (nrow(result) == 0) {
start_year <- min(temp$annee)
end_year <- max(temp$annee)
start_period <- min(temp |> filter(annee == start_year) |> pull(periode))
end_period <- max(temp |> filter(annee == end_year) |> pull(periode))
cli_alert_success(
glue(
"Aucun mois manquant entre M{start_period} {start_year} et M{end_period} {end_year}")
)
} else {
cli::cli_h2("Mois manquant(s)")
print(result, n = Inf)
}
invisible(NULL)
}
check_had_dgf()
build_package("")
build_package("")
#' @export
check_upload <- function(nature) {
box::use(
../../app/logic/nature_utils
[ db_name, ],
cli
[ cli_alert_success, cli_h1, cli_h2, ],
dplyr
[ across, arrange, collect, distinct, everything,
filter, lag, mutate, pull, select, tbl, ],
glue
[ glue, ],
)
cli::cli_h1(glue("Vérification {db_name(nature)}"))
(
db(nature)
|> tbl("key_value")
|> select(annee, periode)
|> distinct()
|> collect()
|> mutate(across(everything(), as.integer))
) -> temp
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
) -> result
if (nrow(result) == 0) {
start_year <- min(temp$annee)
end_year <- max(temp$annee)
start_period <- min(temp |> filter(annee == start_year) |> pull(periode))
end_period <- max(temp |> filter(annee == end_year) |> pull(periode))
cli_alert_success(
glue(
"Aucun mois manquant entre M{start_period} {start_year} et M{end_period} {end_year}")
)
} else {
cli::cli_h2("Mois manquant(s)")
print(result, n = Inf)
}
invisible(NULL)
}
build_package("")
load_all()
check_upload(list(field = "mco", status = "dgf"))
check_upload(list(field = "mco", status = "oqn"))
build_package("")
keyboardShortcutAddin:::cd_to_sub()
keyboardShortcutAddin:::cd_to_sub()
load_all()
check_all_upload()
keyboardShortcutAddin:::build_a_project()
box::use(
../../app/logic/nature_utils
[ all_natures, ],
purrr
[ walk, ],
)
all_natures()
all_natures
build_package("")
library(ovaliDB)
check_all_upload()
mco_dgf()
mco_oqn()
smr_dgf()
build_package("")
library(ovaliDB)
check_all_upload()
build_package("")
load_all()
check_upload(list("psy", "oqn"))
check_upload(list(field = "psy", nature = "oqn"))
db_name(nature)
check_upload(list(field = "psy", status = "oqn"))
temp
result
temp
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
) -> result
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
|> filter(check != 1)
|> mutate(annee = annee + min_annee)
|> select(-min_annee, -check)
)
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12))
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
)
(
temp
|> mutate(min_annee = min(annee))
|> mutate(annee = (annee - min(annee)) * 12)
|> mutate(check = annee + periode)
|> arrange(annee, periode)
|> mutate(check = check - lag(check))
)
load_all()
check_upload(list(field = "psy", status = "oqn"))
load_all()
check_upload(list(field = "psy", status = "oqn"))
load_all()
check_upload(list(field = "psy", status = "oqn"))
load_all()
check_upload(list(field = "psy", status = "oqn"))
load_all()
check_upload(list(field = "psy", status = "oqn"))
check_upload(list(field = "psy", status = "oqn"))
check_upload(list(field = "psy", status = "oqn"))
check_all_upload()
load_all()
check_all_upload()
load_all()
check_all_upload()
load_all()
check_all_upload()
load_all()
check_all_upload()
load_all()
check_all_upload()
check_all_upload()
load_all()
check_all_upload()
check_all_upload()
load_all()
load_all()
check_all_upload()
load_all()
check_all_upload()
check_all_upload()
check_all_upload()
check_all_upload()
