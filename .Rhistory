)
}
valorisation_SMA()
effet_prix_DGF <- function() {
years <- c(year - 1, year)
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee %in% years & periode == month)
|> collect()
|> select(ipe, annee, mnt_dfg)
|> filter(ipe %in% etab_dgf_hprox)
|> pivot_wider(names_from = annee, values_from = mnt_dfg)
|> mutate(across(2:3, as.numeric))
|> mutate(effet_prix = (`2024` - `2023`) / `2023`)
|> select(ipe, effet_prix)
)
}
effet_prix_DGF()
valorisation_HPROX <- function() {
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee == year | annee == (year - 1))
|> mutate(annee = ifelse(annee == year, "YEAR", "LAST_YEAR"))
|> filter(periode == month)
|> filter(ipe %in% etab_dgf_hprox)
|> select(ipe, annee, mnt_dfg, mnt_hpr_valo)
|> collect()
|> pivot_wider(names_from = c(annee), values_from = c(mnt_dfg, mnt_hpr_valo))
|> mutate(across(2:5, as.numeric))
# |> mutate(LastYearRatio = (mnt_hpr_valo_LAST_YEAR / `mnt_dfg_LAST_YEAR`) - 1)
# |> mutate(YearRatio =     (mnt_hpr_valo_YEAR /      `mnt_dfg_YEAR`) - 1)
|> rename(LAST_YEAR_Garantie = mnt_dfg_LAST_YEAR,
YEAR_Garantie = mnt_dfg_YEAR,
LAST_YEAR_Valo = mnt_hpr_valo_LAST_YEAR,
YEAR_Valo = mnt_hpr_valo_YEAR
)
|> mutate(evolution = (YEAR_Valo - LAST_YEAR_Valo) / LAST_YEAR_Valo)
# |> select(1:2, 4, 3, 5:7)
|> select(ipe, LAST_YEAR_Valo, YEAR_Valo, evolution)
|> left_join(effet_prix_DGF())
)
}
valorisation_HPROX()
((
bind_rows(
valorisation_HPROX(),
valorisation_SMA())
|> mutate(evolution =
glue("
{percent_format(.1)(evolution)}({percent_format(.1)(effet_prix)})
")
)
# |> select(-effet_prix)
# |> mutate(evolution = YearRatio - LastYearRatio)
# |> select(1, 6:8)
# |> rename(finess = ipe)
) -> valo_M)
((
bind_rows(
valorisation_HPROX(),
valorisation_SMA())
|> mutate(evolution =
glue("
{percent_format(.1)(evolution)}({percent_format(.1)(effet_prix)})
")
)
|> select(-effet_prix)
# |> mutate(evolution = YearRatio - LastYearRatio)
# |> select(1, 6:8)
# |> rename(finess = ipe)
) -> valo_M)
((
bind_rows(
valorisation_HPROX(),
valorisation_SMA())
|> mutate(evolution =
glue("
{percent_format(.1)(evolution)}({percent_format(.1)(effet_prix)})
")
)
|> select(-effet_prix)
|> rename(finess = ipe)
) -> valo_M)
source('analyses/activite_au_fil_de_leau/02-valorisation-MX.R')
(colname_YEAR_nb_sej_M <- glue("Nb_sej_{year}_M{month}"))
(colname_LAST_YEAR_nb_sej_M <- glue("Nb_sej_{year - 1}_M{month}"))
((
volume_sejour_M
|> rename(!! colname_YEAR_nb_sej_M := YEAR)
|> rename(!! colname_LAST_YEAR_nb_sej_M := LAST_YEAR)
|> rename(`Evolution_vol_sej` = evolution)
|> select(-statut)
) -> volume_sejour_M)
((
tableau_de_base
|> left_join(volume_sejour_M)
|> relocate(last_col(2):last_col(), .before = nb_sej_23_m7)
|> select(-nb_sej_23_m7, -nb_sej_24_m7, -evo_m7)
|> left_join(valo_M)
|> relocate(last_col(2):last_col(), .before = valo23_m7)
|> select(-valo23_m7, -valo24_m7, -ecart_valo_m7)
|> mutate(across(starts_with("vide..."), ~ ""))
|> write_csv2("analyses/activite_au_fil_de_leau/out.csv")
) -> nouveau_tableau)
View(nouveau_tableau)
source('analyses/activite_au_fil_de_leau/00-setup-and-packages.R')
substitue_year <- function(df, year_substitution) {
if( ! is.na(year_substitution)) {
mutate(df, annee = year_substitution)
} else {
df
}
}
nbr_de_sejours <- function(statut, year, month, year_substitution = NA) {
(
tc(t1d2rtp_1, "mco", statut)
|> filter(annee == year)
|> filter(periode == month)
|> filter(`_name_` %in% c("nbrsa0", "nbrsah0"))
|> select(statut, finess_comp, `_name_`, col1, annee)
|> mutate(finess_comp = str_sub(finess_comp, start = 2L))
|> rename(finess = finess_comp, data = `_name_`, value = col1)
|> select(-data)
|> group_by(statut, finess, annee)
|> summarise(N = sum(value))
|> ungroup()
|> collect()
) -> return_value
substitue_year(return_value, year_substitution)
}
extraction_volume_sejour_M <- function(statut) {
(
bind_rows(
nbr_de_sejours(statut, year, month, "YEAR"),
nbr_de_sejours(statut, year - 1, month, "LAST_YEAR"))
|> pivot_wider(names_from = annee, values_from = N)
|> collect()
|> mutate(evolution = (YEAR - LAST_YEAR) / LAST_YEAR)
|> mutate(across(everything(), ~ replace_na(.x, 0)))
|> select(statut, finess, LAST_YEAR, YEAR, evolution)
)
}
(volume_sejour_M <- bind_rows(
extraction_volume_sejour_M("dgf"),
extraction_volume_sejour_M("oqn")))
source('analyses/activite_au_fil_de_leau/01-volume-sejour-M.R')
effet_prix_SMA <- function() {
years <- c(year - 1, year)
(
tc(t1sma_1, "mco", "dgf")
|> filter(annee %in% years & periode == month & var == '01')
|> collect()
|> select(ipe, annee, mnt)
|> filter(ipe %in% etab_dgf_hors_hprox)
|> pivot_wider(names_from = annee, values_from = mnt)
|> mutate(across(2:3, as.numeric))
|> mutate(effet_prix = (`2024` - `2023`) / `2023`)
|> select(ipe, effet_prix)
)
}
effet_prix_SMA() |> print(n=Inf)
valorisation_SMA <- function() {
(
tc(t1sma_1, "mco", "dgf")
|> filter(annee == year | annee == (year - 1))
|> mutate(annee = ifelse(annee == year, "YEAR", "LAST_YEAR"))
|> filter(periode == month)
|> filter(ipe %in% etab_dgf_hors_hprox)
|> filter(var %in% c("11", "02"))
|> mutate(var = ifelse(var == "11", "Ref SMA", "Valo"))
|> select(champ, statut, annee, periode, ipe, var, mnt)
|> collect()
|> pivot_wider(names_from = c(annee, var), values_from = mnt)
|> mutate(across(5:8, as.numeric))
# |> mutate(LastYearRatio = (LAST_YEAR_Valo / `LAST_YEAR_Ref SMA`) - 1)
# |> mutate(YearRatio = (YEAR_Valo / `YEAR_Ref SMA`) - 1)
# |> select(-champ, -statut, -periode)
# |> rename(LAST_YEAR_Garantie = `LAST_YEAR_Ref SMA`,
#           YEAR_Garantie = `YEAR_Ref SMA`
#           )
|> mutate(evolution = (YEAR_Valo - LAST_YEAR_Valo) / LAST_YEAR_Valo)
|> select(ipe, LAST_YEAR_Valo, YEAR_Valo, evolution)
|> left_join(effet_prix_SMA())
)
}
valorisation_SMA()
effet_prix_DGF <- function() {
years <- c(year - 1, year)
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee %in% years & periode == month)
|> collect()
|> select(ipe, annee, mnt_dfg)
|> filter(ipe %in% etab_dgf_hprox)
|> pivot_wider(names_from = annee, values_from = mnt_dfg)
|> mutate(across(2:3, as.numeric))
|> mutate(effet_prix = (`2024` - `2023`) / `2023`)
|> select(ipe, effet_prix)
)
}
effet_prix_DGF()
valorisation_HPROX <- function() {
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee == year | annee == (year - 1))
|> mutate(annee = ifelse(annee == year, "YEAR", "LAST_YEAR"))
|> filter(periode == month)
|> filter(ipe %in% etab_dgf_hprox)
|> select(ipe, annee, mnt_dfg, mnt_hpr_valo)
|> collect()
|> pivot_wider(names_from = c(annee), values_from = c(mnt_dfg, mnt_hpr_valo))
|> mutate(across(2:5, as.numeric))
# |> mutate(LastYearRatio = (mnt_hpr_valo_LAST_YEAR / `mnt_dfg_LAST_YEAR`) - 1)
# |> mutate(YearRatio =     (mnt_hpr_valo_YEAR /      `mnt_dfg_YEAR`) - 1)
|> rename(LAST_YEAR_Garantie = mnt_dfg_LAST_YEAR,
YEAR_Garantie = mnt_dfg_YEAR,
LAST_YEAR_Valo = mnt_hpr_valo_LAST_YEAR,
YEAR_Valo = mnt_hpr_valo_YEAR
)
|> mutate(evolution = (YEAR_Valo - LAST_YEAR_Valo) / LAST_YEAR_Valo)
# |> select(1:2, 4, 3, 5:7)
|> select(ipe, LAST_YEAR_Valo, YEAR_Valo, evolution)
|> left_join(effet_prix_DGF())
)
}
valorisation_HPROX()
source('analyses/activite_au_fil_de_leau/02-valorisation-MX.R')
(colname_YEAR_nb_sej_M <- glue("Nb_sej_{year}_M{month}"))
(colname_LAST_YEAR_nb_sej_M <- glue("Nb_sej_{year - 1}_M{month}"))
((
volume_sejour_M
|> rename(!! colname_YEAR_nb_sej_M := YEAR)
|> rename(!! colname_LAST_YEAR_nb_sej_M := LAST_YEAR)
|> rename(`Evolution_vol_sej` = evolution)
|> select(-statut)
) -> volume_sejour_M)
((
tableau_de_base
|> left_join(volume_sejour_M)
|> relocate(last_col(2):last_col(), .before = nb_sej_23_m7)
|> select(-nb_sej_23_m7, -nb_sej_24_m7, -evo_m7)
|> left_join(valo_M)
|> relocate(last_col(2):last_col(), .before = valo23_m7)
|> select(-valo23_m7, -valo24_m7, -ecart_valo_m7)
|> mutate(across(starts_with("vide..."), ~ ""))
|> write_csv2("analyses/activite_au_fil_de_leau/out.csv")
) -> nouveau_tableau)
View(nouveau_tableau)
source('analyses/activite_au_fil_de_leau/02-valorisation-MX.R')
source("~/Apps/dilavo/analyses/activite_au_fil_de_leau/03-assemble-tableau.R", echo=TRUE)
source('analyses/activite_au_fil_de_leau/00-setup-and-packages.R')
substitue_year <- function(df, year_substitution) {
if( ! is.na(year_substitution)) {
mutate(df, annee = year_substitution)
} else {
df
}
}
nbr_de_sejours <- function(statut, year, month, year_substitution = NA) {
(
tc(t1d2rtp_1, "mco", statut)
|> filter(annee == year)
|> filter(periode == month)
|> filter(`_name_` %in% c("nbrsa0", "nbrsah0"))
|> select(statut, finess_comp, `_name_`, col1, annee)
|> mutate(finess_comp = str_sub(finess_comp, start = 2L))
|> rename(finess = finess_comp, data = `_name_`, value = col1)
|> select(-data)
|> group_by(statut, finess, annee)
|> summarise(N = sum(value))
|> ungroup()
|> collect()
) -> return_value
substitue_year(return_value, year_substitution)
}
extraction_volume_sejour_M <- function(statut) {
(
bind_rows(
nbr_de_sejours(statut, year, month, "YEAR"),
nbr_de_sejours(statut, year - 1, month, "LAST_YEAR"))
|> pivot_wider(names_from = annee, values_from = N)
|> collect()
|> mutate(evolution = (YEAR - LAST_YEAR) / LAST_YEAR)
|> mutate(across(everything(), ~ replace_na(.x, 0)))
|> select(statut, finess, LAST_YEAR, YEAR, evolution)
)
}
(volume_sejour_M <- bind_rows(
extraction_volume_sejour_M("dgf"),
extraction_volume_sejour_M("oqn")))
source('analyses/activite_au_fil_de_leau/01-volume-sejour-M.R')
effet_prix_SMA <- function() {
years <- c(year - 1, year)
(
tc(t1sma_1, "mco", "dgf")
|> filter(annee %in% years & periode == month & var == '01')
|> collect()
|> select(ipe, annee, mnt)
|> filter(ipe %in% etab_dgf_hors_hprox)
|> pivot_wider(names_from = annee, values_from = mnt)
|> mutate(across(2:3, as.numeric))
|> mutate(effet_prix = (`2024` - `2023`) / `2023`)
|> select(ipe, effet_prix)
)
}
effet_prix_SMA() |> print(n=Inf)
valorisation_SMA <- function() {
(
tc(t1sma_1, "mco", "dgf")
|> filter(annee == year | annee == (year - 1))
|> mutate(annee = ifelse(annee == year, "YEAR", "LAST_YEAR"))
|> filter(periode == month)
|> filter(ipe %in% etab_dgf_hors_hprox)
|> filter(var %in% c("11", "02"))
|> mutate(var = ifelse(var == "11", "Ref SMA", "Valo"))
|> select(champ, statut, annee, periode, ipe, var, mnt)
|> collect()
|> pivot_wider(names_from = c(annee, var), values_from = mnt)
|> mutate(across(5:8, as.numeric))
# |> mutate(LastYearRatio = (LAST_YEAR_Valo / `LAST_YEAR_Ref SMA`) - 1)
# |> mutate(YearRatio = (YEAR_Valo / `YEAR_Ref SMA`) - 1)
# |> select(-champ, -statut, -periode)
# |> rename(LAST_YEAR_Garantie = `LAST_YEAR_Ref SMA`,
#           YEAR_Garantie = `YEAR_Ref SMA`
#           )
|> mutate(evolution = (YEAR_Valo - LAST_YEAR_Valo) / LAST_YEAR_Valo)
|> select(ipe, LAST_YEAR_Valo, YEAR_Valo, evolution)
|> left_join(effet_prix_SMA())
)
}
valorisation_SMA()
effet_prix_DGF <- function() {
years <- c(year - 1, year)
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee %in% years & periode == month)
|> collect()
|> select(ipe, annee, mnt_dfg)
|> filter(ipe %in% etab_dgf_hprox)
|> pivot_wider(names_from = annee, values_from = mnt_dfg)
|> mutate(across(2:3, as.numeric))
|> mutate(effet_prix = (`2024` - `2023`) / `2023`)
|> select(ipe, effet_prix)
)
}
effet_prix_DGF()
valorisation_HPROX <- function() {
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee == year | annee == (year - 1))
|> mutate(annee = ifelse(annee == year, "YEAR", "LAST_YEAR"))
|> filter(periode == month)
|> filter(ipe %in% etab_dgf_hprox)
|> select(ipe, annee, mnt_dfg, mnt_hpr_valo)
|> collect()
|> pivot_wider(names_from = c(annee), values_from = c(mnt_dfg, mnt_hpr_valo))
|> mutate(across(2:5, as.numeric))
# |> mutate(LastYearRatio = (mnt_hpr_valo_LAST_YEAR / `mnt_dfg_LAST_YEAR`) - 1)
# |> mutate(YearRatio =     (mnt_hpr_valo_YEAR /      `mnt_dfg_YEAR`) - 1)
|> rename(LAST_YEAR_Garantie = mnt_dfg_LAST_YEAR,
YEAR_Garantie = mnt_dfg_YEAR,
LAST_YEAR_Valo = mnt_hpr_valo_LAST_YEAR,
YEAR_Valo = mnt_hpr_valo_YEAR
)
|> mutate(evolution = (YEAR_Valo - LAST_YEAR_Valo) / LAST_YEAR_Valo)
# |> select(1:2, 4, 3, 5:7)
|> select(ipe, LAST_YEAR_Valo, YEAR_Valo, evolution)
|> left_join(effet_prix_DGF())
)
}
valorisation_HPROX()
((
bind_rows(
valorisation_HPROX(),
valorisation_SMA())
|> mutate(evolution =
glue("
{percent_format(.1)(evolution)}({percent_format(.1)(effet_prix)})
")
)
|> select(-effet_prix)
|> rename(finess = ipe)
) -> valo_M)
source('analyses/activite_au_fil_de_leau/02-valorisation-MX.R')
(colname_YEAR_nb_sej_M <- glue("Nb_sej_{year}_M{month}"))
(colname_LAST_YEAR_nb_sej_M <- glue("Nb_sej_{year - 1}_M{month}"))
((
volume_sejour_M
|> rename(!! colname_YEAR_nb_sej_M := YEAR)
|> rename(!! colname_LAST_YEAR_nb_sej_M := LAST_YEAR)
|> rename(`Evolution_vol_sej` = evolution)
|> select(-statut)
) -> volume_sejour_M)
((
tableau_de_base
|> left_join(volume_sejour_M)
|> relocate(last_col(2):last_col(), .before = nb_sej_23_m7)
|> select(-nb_sej_23_m7, -nb_sej_24_m7, -evo_m7)
|> left_join(valo_M)
|> relocate(last_col(2):last_col(), .before = valo23_m7)
|> select(-valo23_m7, -valo24_m7, -ecart_valo_m7)
|> mutate(across(starts_with("vide..."), ~ ""))
|> write_csv2("analyses/activite_au_fil_de_leau/out.csv")
) -> nouveau_tableau)
View(nouveau_tableau)
valorisation_SMA()
effet_prix_DGF <- function() {
years <- c(year - 1, year)
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee %in% years & periode == month)
|> collect()
|> select(ipe, annee, mnt_dfg)
|> filter(ipe %in% etab_dgf_hprox)
|> pivot_wider(names_from = annee, values_from = mnt_dfg)
|> mutate(across(2:3, as.numeric))
|> mutate(effet_prix = (`2024` - `2023`) / `2023`)
|> select(ipe, effet_prix)
)
}
valorisation_SMA()
effet_prix_DGF <- function() {
years <- c(year - 1, year)
(
tc(t1v5hprox_1, "mco", "dgf")
|> filter(annee %in% years & periode == month)
|> collect()
|> select(ipe, annee, mnt_dfg)
|> filter(ipe %in% etab_dgf_hprox)
|> pivot_wider(names_from = annee, values_from = mnt_dfg)
# |> mutate(across(2:3, as.numeric))
# |> mutate(effet_prix = (`2024` - `2023`) / `2023`)
# |> select(ipe, effet_prix)
)
}
effet_prix_DGF()
ls
reticulate::repl_python()
library(dplyr)
library(stringr)
reticulate::repl_python()
reticulate::repl_python()
install.packages("reticulate")
reticulater
reticulate
reticulate::py_install("XlsxWriter")
reticulate::repl_python()
source("INSTALL_MY_PACKAGES.R")
file.edit("tmp/test.py")
reticulate::repl_python()
source("INSTALL_MY_PACKAGES.R")
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::repl_python()
reticulate::py_run_file("tmp/test.py")
reticulate::repl_python()
reticulate::source_python('~/tmp/test.py')
reticulate::py_last_error()
reticulate::source_python('tmp/test.py')
reticulate::repl_python()
system("python3 /home/rstudio/tmp/test.py")
reticulate::repl_python()
reticulate::py_run_file("/home/rstudio/tmp/test.py")
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::repl_python()
reticulate::repl_python()
file.edit("tmp/test.py")
reticulate::repl_python()
reticulate::py_install("pandas")
reticulate::repl_python()
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::repl_python()
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
diamonds
tidyverse::diamonds
reticulate::source_python('~/tmp/test.py')
reticulate::repl_python()
esoph
esoph |> tibble::as_tibble()
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::repl_python()
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::source_python('~/tmp/test.py')
reticulate::repl_python()
