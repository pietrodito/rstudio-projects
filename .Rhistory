input$cmd_rows_selected
ghms()
input$cmd_rows_selected
input$cmd_rows_selected
shiny::runApp()
shiny::runApp()
cmd_list()
cmd_list()[input$cmd_rows_selected]
input$cmd_rows_selected
cmd_list() |> pull()
cmd_list() |> dplyr::pull()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
shiny::runApp()
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
shiny::runApp()
bind_rows(
ghm_etab_year_period(finess,
most_recent_year(nature() - 1),
most_recent_period(nature()))
,
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
)
dplyr::bind_rows(
ghm_etab_year_period(finess,
most_recent_year(nature() - 1),
most_recent_period(nature()))
,
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
)
ghm_etab_year_period(finess,
most_recent_year(nature() - 1),
most_recent_period(nature()))
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
dplyr::bind_rows(
ghm_etab_year_period(finess,
most_recent_year(nature()) - 1,
most_recent_period(nature()))
,
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
)
most_recent_year(nature())
bind_rows(
ghm_etab_year_period(finess,
as.character(as.integer(
most_recent_year(nature())) - 1),
most_recent_period(nature()))
,
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
)
shiny::runApp()
bind_rows(
ghm_etab_year_period(finess,
as.character(as.integer(
most_recent_year(nature())) - 1),
most_recent_period(nature()))
,
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
)
bind_rows(
ghm_etab_year_period(finess,
as.character(as.integer(
most_recent_year(nature())) - 1),
most_recent_period(nature()))
,
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
)
shiny::runApp()
bind_rows(
ghm_etab_year_period(finess,
as.character(as.integer(
most_recent_year(nature())) - 1),
most_recent_period(nature()))
,
ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
(
ghms()
|> filter(cmd %in% selected_cmd())
|> filter(cas %in% selected_cas())
)
ghms()
shiny::runApp()
ghms()
ghms() |> pinf()
ghms() |> console::pinf()
ghms() |> consoleR::pinf()
Q
shiny::runApp()
shiny::runApp()
ghms()
ghms() |> consoleR::pinf()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
last_year <- ghm_etab_year_period(nature, finess,
most_recent_year(nature()) - 1,
most_recent_period(nature()))
shiny::runApp()
last_year <- ghm_etab_year_period(finess,
most_recent_year(nature()) - 1,
most_recent_period(nature()))
shiny::runApp()
last_year <- ghm_etab_year_period(finess,
most_recent_year(nature()) - 1,
most_recent_period(nature()))
box::use(
app/logic/db_utils
[  most_recent_year, most_recent_period, ],
app/logic/nature_utils
[ nature, ],
dplyr
[ bind_rows, filter, mutate, ],
ggplot2
[ aes, annotate, expand_limits, geom_point, geom_smooth, ggplot, ],
)
last_year <- ghm_etab_year_period(finess,
most_recent_year(nature()) - 1,
most_recent_period(nature()))
last_year <- ghm_etab_year_period(finess,
most_recent_year(nature()) - 1,
most_recent_period(nature()))
last_year <- ghm_etab_year_period(finess,
as.character(as.integer(
most_recent_year(nature())) - 1),
most_recent_period(nature()))
last_year
last_year |> consoleR::pinf()
this_year <- ghm_etab_year_period(finess,
most_recent_year(nature()),
most_recent_period(nature()))
evolution <- function(last_year, this_year) {
last_month_total <- function(year) {
year[nrow(year), "Total"]
}
(
(last_month_total(this_year) - last_month_total(last_year))
/
last_month_total(this_year)
) -> result
prefixe <- ifelse(result$Total >= 0, "+", "")
paste0(prefixe, scales::percent_format(accuracy = .1)(result$Total))
}
(
bind_rows(last_year, this_year)
|> mutate(periode = as.integer(periode))
|> filter(cmd %in% selected_cmd)
|> filter(cas %in% selected_cas)
|> ggplot(aes(periode, Total, color = annee))
+  geom_point()
+  geom_smooth(method = "lm")
+  expand_limits(y = 0)
+  annotate("text",
x = - Inf,
y = - Inf,
label = evolution(last_year, this_year),
vjust = -6,
hjust = -6.5,
size = 10)
)
|> filter(cas %in% selected_cas)
(
)
(
)
(
bind_rows(last_year, this_year)
|> mutate(periode = as.integer(periode))
|> filter(cmd %in% selected_cmd)
|> filter(cas %in% selected_cas)
# |> ggplot(aes(periode, Total, color = annee))
# +  geom_point()
# +  geom_smooth(method = "lm")
# +  expand_limits(y = 0)
# +  annotate("text",
#             x = - Inf,
#             y = - Inf,
#             label = evolution(last_year, this_year),
#             vjust = -6,
#             hjust = -6.5,
#             size = 10)
)
selected_cas
selected_cmd
selected_cas
selected_cmd
shiny::runApp()
selected_cas
(
bind_rows(last_year, this_year)
|> mutate(periode = as.integer(periode))
|> filter(cmd %in% selected_cmd)
|> filter(cas %in% selected_cas)
# |> ggplot(aes(periode, Total, color = annee))
# +  geom_point()
# +  geom_smooth(method = "lm")
# +  expand_limits(y = 0)
# +  annotate("text",
#             x = - Inf,
#             y = - Inf,
#             label = evolution(last_year, this_year),
#             vjust = -6,
#             hjust = -6.5,
#             size = 10)
)
(
bind_rows(last_year, this_year)
|> mutate(periode = as.integer(periode))
|> filter(cmd %in% selected_cmd)
|> filter(cas %in% selected_cas)
# |> ggplot(aes(periode, Total, color = annee))
# +  geom_point()
# +  geom_smooth(method = "lm")
# +  expand_limits(y = 0)
# +  annotate("text",
#             x = - Inf,
#             y = - Inf,
#             label = evolution(last_year, this_year),
#             vjust = -6,
#             hjust = -6.5,
#             size = 10)
)
(
bind_rows(last_year, this_year)
|> mutate(periode = as.integer(periode))
|> filter(cmd %in% selected_cmd)
|> filter(cas %in% selected_cas)
|> ggplot(aes(periode, N, color = annee))
# +  geom_point()
# +  geom_smooth(method = "lm")
# +  expand_limits(y = 0)
# +  annotate("text",
#             x = - Inf,
#             y = - Inf,
#             label = evolution(last_year, this_year),
#             vjust = -6,
#             hjust = -6.5,
#             size = 10)
)
(
bind_rows(last_year, this_year)
|> mutate(periode = as.integer(periode))
|> filter(cmd %in% selected_cmd)
|> filter(cas %in% selected_cas)
|> ggplot(aes(periode, N, color = annee))
# +  geom_point()
# +  geom_smooth(method = "lm")
# +  expand_limits(y = 0)
# +  annotate("text",
#             x = - Inf,
#             y = - Inf,
#             label = evolution(last_year, this_year),
#             vjust = -6,
#             hjust = -6.5,
#             size = 10)
)
(
bind_rows(last_year, this_year)
|> mutate(periode = as.integer(periode))
|> filter(cmd %in% selected_cmd)
|> filter(cas %in% selected_cas)
|> ggplot(aes(periode, N, color = annee))
+  geom_point()
# +  geom_smooth(method = "lm")
# +  expand_limits(y = 0)
# +  annotate("text",
#             x = - Inf,
#             y = - Inf,
#             label = evolution(last_year, this_year),
#             vjust = -6,
#             hjust = -6.5,
#             size = 10)
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
file.edit("app/logic/monthly_activity.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
(
bind_rows(last_year, this_year))
(
bind_rows(last_year, this_year)) |> consoleR::pinf()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
last_month_total(this_year)
this_year
this_year |> filter(periode == 1)
most_recent_period(nature())
this_year |> filter(periode == most_recent_period(nature()))
(
bind_rows(last_year, this_year)
most_recent_period(nature())
shiny::runApp()
this_year]
this_year
this_year |> filter(periode == most_recent_period(nature())) |> as.integer())
this_year |> filter(periode == most_recent_period(nature()) |> as.integer())
shiny::runApp()
this_year
last_year
most_recent_period(nature())
most_recent_period(nature()) |> as.integer()
shiny::runApp()
shiny::runApp()
(
year
|> filter(periode == the_period))
(
year
|> filter(periode == the_period)
|> summarise(N = sum(N))
|> pull(N)
)
(
year
|> filter(periode == the_period)
|> summarise(N = sum(N))
# |> pull(N)
)
(
year
|> filter(periode == the_period)
|> group_by(annee, period)
|> summarise(N = sum(N))
# |> pull(N)
)
(
year
|> filter(periode == the_period)
|> group_by(annee, periode)
|> summarise(N = sum(N))
# |> pull(N)
)
(
year
|> filter(periode == the_period)
|> group_by(annee, periode)
|> summarise(N = sum(N))
|> pull(N)
)
shiny::runApp()
Q
shiny::runApp()
shiny::runApp()
last_month_total(this_year)
last_month_total(last_year)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
/dom
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
keyboardShortcutAddin:::cd_to_sub()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
cd("./draft/")
create_project("SO_unselect_DT_rows")
keyboardShortcutAddin:::cd_to_sub()
cd("./Apps/dilavo/")
file.edit("app.R")
file.edit("app/main.R")
file.edit("tests/interactive/monthly_activity.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
cd("./draft")
create_package("tabulatorr_select_rows")
create_package("tabulatorrSelectRows")
shiny::runApp()
file.edit("app.R")
shiny::runApp()
keyboardShortcutAddin:::list_files_pwd()
file.edit("~/Apps/dilavo/app/main.R")
shiny::runApp()
renv::install("tabulatorr")
renv::status
renv::install("~/my_packages/tabulatorr")
renv::snapshot()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
iris
mtcars
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
proj_switch()
file.edit("DESCRIPTION")
file.edit("inst/")
file.edit("inst/htmlwidgets/tabulator.yaml")
build_package()
proj_switch()
proj_switch()
file.edit("tests/interactive/monthly_activity.R")
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
cd("./draft/tabulatorrSelectRows/")
shiny::runApp()
file.edit("app.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
proj_add()
proj_switch()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
file.edit("inst/htmlwidgets/tabulator.js")
setwd("~")
follow_symlinks <- function(paths) {
merge_path <- function(path, link) {
paste0(dirname(path), "/", link)
}
(
paths
|> Sys.readlink()
|> (\(x) ifelse(x == "", paths, merge_path(paths, x)))()
)
}
(
"./my_packages/RStudio-tools"
|> fs::dir_ls()
|> follow_symlinks()
|> purrr::walk(~ devtools::install(.))
)
install.packages("rlang")
install.packages("rlang")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::cd_to_parent_dir()
install_my_packages_inside_rhino("dilavo/")
getwd()
renv::status()
renv::restore()
