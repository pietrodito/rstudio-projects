fig <- plot_ly(
type = "sankey",
orientation = "h",
node = list(
label = nodes,
color = colors,
pad = 15,
thickness = 20,
line = list(
color = "black",
width = 0.5
)
),
link = int_df
)
fig <- fig %>% layout(
title = "Basic Sankey Diagram",
font = list(
size = 10
)
)
fig
keyboardShortcutAddin:::list_files_pwd()
keyboardShortcutAddin:::list_files_pwd()
keyboardShortcutAddin:::list_files_pwd()
edit_file("R/sankey.R")
library(plotly)
library(tidyverse)
(df <- read_csv("bariatric_sankey.csv"))
(
df
)
1:3 > 2
link_step_gt_two <- function(link_to) {
(
link_to
|> stringr::str_sub(1, 1)
|> `>`(2)
)
}
link_step_gt_two(df$link_to)
link_step_gt_two <- function(link_to) {
(
link_to
|> stringr::str_sub(1, 1)
|> `>`(2)
)
}
link_step_gt_two <- function(link_to) {
(
link_to
|> stringr::str_sub(1, 1)
%>% `>`(2)
)
}
link_step_gt_two(df$link_to)
gt_two <- function(x) { x > 2}
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> stringr::str_sub(1, 1)
|> gt_two()
)
}
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> stringr::str_sub(1, 1)
|> gt_two()
)
}
link_step_gt_two(df$link_to)
library(plotly)
library(tidyverse)
(df <- read_csv("bariatric_sankey.csv"))
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> stringr::str_sub(1, 1)
|> gt_two()
)
}
link_step_gt_two(df$link_to)
(
df
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surgeries",
link_to))
)
library(stringr)
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
(
df
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect("No more"),
"No more surg.",
link_to))
)
(
df
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect(link_to, "No more"),
"No more surg.",
link_to))
)
df
(
df
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect(link_to, "No more"),
"No more surg.",
link_to))
|> filter( ! link_step_gt_two(link_from))
)
library(plotly)
library(tidyverse)
library(stringr)
(df_raw <- read_csv("bariatric_sankey.csv"))
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> str_sub(1, 1)
|> gt_two()
)
}
(
df_raw
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect(link_to, "No more"),
"No more surg.",
link_to))
|> filter( ! link_step_gt_two(link_from))
) -> df
simplify_labels <- function(col) {
(
col
|> str_remove("Adjustable gastric ")
|> str_remove("Gastric ")
|> str_remove(" gastrectomy")
)
}
(df$link_from <- simplify_labels(df$link_from))
(df$link_to   <- simplify_labels(df$link_to  ))
(nodes <- c(df$link_from, df$link_to) |> unique())
make_fct_then_int <- function(col) {
factor(col, levels = nodes) |> as.integer() - 1
}
library(plotly)
library(tidyverse)
library(stringr)
(df_raw <- read_csv("bariatric_sankey.csv"))
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> str_sub(1, 1)
|> gt_two()
)
}
(
df_raw
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect(link_to, "No more"),
"No more surg.",
link_to))
|> filter( ! link_step_gt_two(link_from))
) -> df
library(plotly)
library(tidyverse)
library(stringr)
(df_raw <- read_csv("bariatric_sankey.csv"))
(df_raw <- read_csv("data/bariatric_sankey.csv"))
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> str_sub(1, 1)
|> gt_two()
)
}
(
df_raw
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect(link_to, "No more"),
"No more surg.",
link_to))
|> filter( ! link_step_gt_two(link_from))
) -> df
simplify_labels <- function(col) {
(
col
|> str_remove("Adjustable gastric ")
|> str_remove("Gastric ")
|> str_remove(" gastrectomy")
)
}
(df$link_from <- simplify_labels(df$link_from))
(df$link_to   <- simplify_labels(df$link_to  ))
(nodes <- c(df$link_from, df$link_to) |> unique())
make_fct_then_int <- function(col) {
factor(col, levels = nodes) |> as.integer() - 1
}
lightgrey <- rgb(.75, .75, .75, .25)
red       <- rgb(  1,   0,   0, .25)
green     <- rgb(  0,   1,   0, .25)
blue      <- rgb(  0,   0,   1, .25)
((
tibble(
target = df$link_to,
source = make_fct_then_int(df$link_from),
value = df$N
)
|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
ifelse(str_detect(target, "bypass"), red,
ifelse(str_detect(target, "Sleeve"), green,
blue))),
target = make_fct_then_int(df$link_to))
) -> int_df)
(colors <- rep("white", 26))
update_node_colors <- function(pattern, color) {
colors[str_detect(nodes, pattern)] <<- color
}
update_node_colors("banding", blue)
update_node_colors("bypass", red)
update_node_colors("Sleeve", green)
update_node_colors("No", lightgrey)
(nodes <- ifelse(str_detect(nodes, "No"),
"NO MORE SURGERY",
nodes))
fig <- plot_ly(
type = "sankey",
orientation = "h",
node = list(
label = nodes,
color = colors,
pad = 15,
thickness = 20,
line = list(
color = "black",
width = 0.5
)
),
link = int_df
)
fig <- fig %>% layout(
title = "Basic Sankey Diagram",
font = list(
size = 10
)
)
fig
simplify_labels <- function(col) {
(
col
|> str_remove("Adjustable gastric ")
|> str_remove("Gastric ")
|> str_remove(" gastrectomy")
)
}
(df$link_from <- simplify_labels(df$link_from))
(df$link_to   <- simplify_labels(df$link_to  ))
(nodes <- c(df$link_from, df$link_to) |> unique())
make_fct_then_int <- function(col) {
factor(col, levels = nodes) |> as.integer() - 1
}
lightgrey <- rgb(.75, .75, .75, .25)
red       <- rgb(  1,   0,   0, .25)
green     <- rgb(  0,   1,   0, .25)
blue      <- rgb(  0,   0,   1, .25)
((
tibble(
target = df$link_to,
source = make_fct_then_int(df$link_from),
value = df$N
)
|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
ifelse(str_detect(target, "bypass"), red,
ifelse(str_detect(target, "Sleeve"), green,
blue))),
target = make_fct_then_int(df$link_to))
) -> int_df)
(colors <- rep("white", 26))
update_node_colors <- function(pattern, color) {
colors[str_detect(nodes, pattern)] <<- color
}
update_node_colors("banding", blue)
update_node_colors("bypass", red)
update_node_colors("Sleeve", green)
update_node_colors("More", lightgrey)
update_node_colors("No", lightgrey)
fig <- plot_ly(
type = "sankey",
orientation = "h",
node = list(
label = nodes,
color = colors,
pad = 15,
thickness = 20,
line = list(
color = "black",
width = 0.5
)
),
link = int_df
)
fig <- fig %>% layout(
title = "Basic Sankey Diagram",
font = list(
size = 10
)
)
fig
library(plotly)
library(tidyverse)
(df <- read_csv("bariatric_sankey.csv"))
simplify_labels <- function(col) {
(
col
|> str_remove("Adjustable gastric ")
|> str_remove("Gastric ")
|> str_remove(" gastrectomy")
)
}
library(plotly)
library(tidyverse)
library(stringr)
(df_raw <- read_csv("data/bariatric_sankey.csv"))
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> str_sub(1, 1)
|> gt_two()
)
}
(
df_raw
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect(link_to, "No more"),
"No more surg.",
link_to))
|> filter( ! link_step_gt_two(link_from))
) -> df
simplify_labels <- function(col) {
(
col
|> str_remove("Adjustable gastric ")
|> str_remove("Gastric ")
|> str_remove(" gastrectomy")
)
}
(df$link_from <- simplify_labels(df$link_from))
(df$link_to   <- simplify_labels(df$link_to  ))
(nodes <- c(df$link_from, df$link_to) |> unique())
make_fct_then_int <- function(col) {
factor(col, levels = nodes) |> as.integer() - 1
}
lightgrey <- rgb(.75, .75, .75, .25)
red       <- rgb(  1,   0,   0, .25)
green     <- rgb(  0,   1,   0, .25)
blue      <- rgb(  0,   0,   1, .25)
((
target = df$link_to,
value = df$N
|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
(colors <- rep("white", 26))
update_node_colors <- function(pattern, color) {
colors[str_detect(nodes, pattern)] <<- color
}
update_node_colors("banding", blue)
update_node_colors("bypass", red)
update_node_colors("Sleeve", green)
update_node_colors("More", lightgrey)
update_node_colors("No", lightgrey)
fig <- plot_ly(
type = "sankey",
orientation = "h",
node = list(
label = nodes,
color = colors,
pad = 15,
thickness = 20,
line = list(
color = "black",
width = 0.5
)
),
link = int_df
)
fig <- fig %>% layout(
title = "Basic Sankey Diagram",
font = list(
size = 10
)
)
fig
library(plotly)
library(tidyverse)
library(stringr)
(df_raw <- read_csv("data/bariatric_sankey.csv"))
link_step_gt_two <- function(link_to) {
gt_two <- function(x) { x > 2}
(
link_to
|> str_sub(1, 1)
|> gt_two()
)
}
(
df_raw
|> mutate(link_to = ifelse(link_step_gt_two(link_to),
"More than two surg.",
link_to),
link_to = ifelse(str_detect(link_to, "No more"),
"No more surg.",
link_to))
|> filter( ! link_step_gt_two(link_from))
) -> df
simplify_labels <- function(col) {
(
col
|> str_remove("Adjustable gastric ")
|> str_remove("Gastric ")
|> str_remove(" gastrectomy")
)
}
(df$link_from <- simplify_labels(df$link_from))
(df$link_to   <- simplify_labels(df$link_to  ))
(nodes <- c(df$link_from, df$link_to) |> unique())
make_fct_then_int <- function(col) {
factor(col, levels = nodes) |> as.integer() - 1
}
lightgrey <- rgb(.75, .75, .75, .25)
red       <- rgb(  1,   0,   0, .25)
green     <- rgb(  0,   1,   0, .25)
blue      <- rgb(  0,   0,   1, .25)
((
target = df$link_to,
((
tibble(
target = df$link_to,
source = make_fct_then_int(df$link_from),
value = df$N
)
|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
ifelse(str_detect(target, "bypass"), red,
ifelse(str_detect(target, "Sleeve"), green,
ifelse(str_detect(target, "banding"), blue,
lightgrey)))),
target = make_fct_then_int(df$link_to))
) -> int_df)
(colors <- rep("white", 26))
update_node_colors <- function(pattern, color) {
colors[str_detect(nodes, pattern)] <<- color
}
update_node_colors("banding", blue)
update_node_colors("bypass", red)
update_node_colors("Sleeve", green)
update_node_colors("More", lightgrey)
update_node_colors("No", lightgrey)
fig <- plot_ly(
type = "sankey",
orientation = "h",
node = list(
label = nodes,
color = colors,
pad = 15,
thickness = 20,
line = list(
color = "black",
width = 0.5
)
),
link = int_df
)
fig <- fig %>% layout(
title = "Basic Sankey Diagram",
font = list(
size = 10
)
)
fig
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
HIGH_DETAILS <- F
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
q()
