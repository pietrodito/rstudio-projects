keyboardShortcutAddin:::switch_between_projects()
edit_file("app/logic/db_utils.R")
edit_file("tests/interactive/db_create_tables.R")
edit_rstudio_snippets()
file_delete("tests/interactive/onther_test.R")
file_delete("tests/interactive/test.R")
e("tests/interactive/db_connect.R")
edit_file("tests/interactive/db_connect.R")
edit_file("tests/interactive/db_connect.R")
?sample
matrix(1:50, ncol = 10)
m <- matrix(1:50, ncol = 10)
colnames(m) <- letters[1:10]
m
as.data.frame(m)
?runif
base::mtcars
stats::mtcars
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::list_files_pwd()
keyboardShortcutAddin:::cd_to_sub()
keyboardShortcutAddin:::cd_to_sub()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
keyboardShortcutAddin:::switch_between_projects()
edit_file("db_updater/script.R")
keyboardShortcutAddin:::cd_to_sub()
edit_file("db_updater/script.R")
edit_file("app/logic/db_utils.R")
edit_file("Dockerfile")
dir_ls('.')
x <- dir_ls(".")
x
str(x)
x[1]
dir.ls("/root/")
list.files("/root/")
list.files("tmp")
list.files("/tmp")
edit_file("tests/interactive/db_updater_create_file.R")
edit_file("tests/interactive/db_create_tables.R")
edit_file("tests/interactive/db_updater_create_file.R")
write(letters,"/tmp/x")
edit_file("tests/interactive/db_updater_create_file.R")
file_move("db_updater/script.R", "db_updater/db_updater_script.R")
edit_file("db_updater/db_updater_script.R")
edit_file("app/logic/db_utils.R")
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
keyboardShortcutAddin:::cd_to_sub()
cd("./Apps/draft/")
dir_create("source_args")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::cd_to_sub()
cd("./source_args/")
edit_file("script.R")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::list_files_pwd()
keyboardShortcutAddin:::cd_to_sub()
cd("./draft/")
keyboardShortcutAddin:::list_files_pwd()
keyboardShortcutAddin:::switch_between_projects()
edit_file("Dockerfile")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
edit_file("~/Apps/draft/PoC_db_updater_with_one_R_process_by_nature/db_updater/probe_dir.R")
edit_file("db_updater/Dockerfile")
keyboardShortcutAddin:::cd_to_sub()
edit_file("db_updater/Dockerfile")
file_copy("~/Apps/draft/PoC_db_updater_with_one_R_process_by_nature/db_updater/entrypoint.sh", "./db_updater/")
edit_file("db_updater/entrypoint.sh")
edit_file("db_updater/probe_dir.R")
edit_file("tests/interactive/db_updater_create_file.R")
keyboardShortcutAddin:::list_files_pwd()
keyboardShortcutAddin:::switch_between_projects()
basename("/asdf/qwer")
grepl("^\\.zip$", "qwer.zip")
grepl("^.zip$", "qwer.zip")
grepl("\\.zip$", "qwer.zip")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::list_files_pwd()
edit_file("db_updater/db_updater_utils.R")
keyboardShortcutAddin:::switch_between_projects()
foo <- function(...) {
paste0(...)
}
foo("asdf", "qwer")
strsplit("qwer.asdf.zxcv.zip", '.')
strsplit("qwer.asdf.zxcv.zip", '\\.')
str(list(a = 1, b = 2))
summary.default(list(a = 1, b = 2))
capture.output(str(list(a = 1, b = 2)))
capture.output(str(list(a = 1, b = 2)))
?capture.output
lst <- list(
a = 1,
b = 2,
c = 3
)
lst <- list(
a = 1,
b = 2,
c = 3
)
print(lst)
lst
write(lst, "~/Apps/draft/lst.txt")
cat(lst)
capture.output(print(lst))
print(lst)
names(lst)
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
if(list) {
lst <- args[[1]]
n <- list(names(lst))
mapply(
function(name, elt) { # name <=> X, elt <=> Y
write(
paste0(name, ": ", elt),
logpath,
append = TRUE
)
},
X = n, Y = lst
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(a = 1, b =2), list = T)
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
if(list) {
lst <- args[[1]]
n <- list(names(lst))
mapply(
function(name, elt) {
write(
paste0(name, ": ", elt),
logpath,
append = TRUE
)
},
name = n, elt = lst
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(a = 1, b =2), list = T)
log(list(x = 1, y = 2), list = T)
?mapply
mapply(rep, 1:4, 4:1)
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
browser()
if(list) {
lst <- args[[1]]
n <- list(names(lst))
mapply(
function(name, elt) {
write(
paste0(name, ": ", elt),
logpath,
append = TRUE
)
},
name = n, elt = lst
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(x = 1, y = 2), list = T)
lst
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
browser()
if(list) {
lst <- args[[1]]
n <- list(names(lst))
mapply(
function(name, elt) {
write(
paste0(name, ": ", elt),
logpath,
append = TRUE
)
},
name = n, elt = lst
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(x = 1, y = 2), list = T)
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
browser()
if(list) {
values <- args[[1]] |> unlist()
names <- names(lst)
mapply(
function(name, val) {
write(
paste0(name, ": ", val),
logpath,
append = TRUE
)
},
name = names, val = values
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
browser()
if(list) {
values <- args[[1]] |> unlist()
names <- names(lst)
mapply(
function(name, val) {
write(
paste0(name, ": ", val),
logpath,
append = TRUE
)
},
name = names, val = values
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(x = 1, y = 2), list = T)
log(list(x = 1, y = 2), list = T)
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
if(list) {
values <- args[[1]] |> unlist()
names <- names(lst)
mapply(
function(name, val) {
write(
paste0(name, ": ", val),
logpath,
append = TRUE
)
},
name = names, val = values
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(x = 1, y = 2), list = T)
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
if(list) {
values <- args[[1]] |> unlist()
print(values)
names <- names(lst)
print(names)
mapply(
function(name, val) {
write(
paste0(name, ": ", val),
logpath,
append = TRUE
)
},
name = names, val = values
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(x = 1, y = 2), list = T)
names
values
log <- function(..., list = F) {
args <- list(...)
logpath <- "~/Apps/draft/lst.txt"
if(list) {
values <- args[[1]] |> unlist()
names <- names(values)
mapply(
function(name, val) {
write(
paste0(name, ": ", val),
logpath,
append = TRUE
)
},
name = names, val = values
)
} else {
write(
x      = paste0(args),
file   = logpath,
append = TRUE
)
}
}
log(list(x = 1, y = 2), list = T)
log(list(z = 3, v = 4), list = T)
edit_file("db_updater/db_updater_utils.R")
edit_file("tests/interactive/db_connect.R")
?str
as.integer("qwer")
NA > 2023
T && NA
if(NA) print("asdf")
q()
de
edit_file("Apps/dilavo/app/logic/db_utils.R")
keyboardShortcutAddin:::switch_between_projects()
shiny::runApp()
keyboardShortcutAddin:::cd_to_sub()
q()
