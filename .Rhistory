)
(
psy
|> filter(`Etablissement de santé` == "EPSM DES FLANDRES")
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(pmsi20_code, PMSI20_LIB_COURT)
)
(
psy
|> filter(`Etablissement de santé` == "EPSM DES FLANDRES")
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(Secteur, pmsi20_code, PMSI20_LIB_COURT)
)
(
psy
|> filter(`Etablissement de santé` == "EPSM DES FLANDRES")
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT)
)
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT)
)
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
)
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
|> pull(PMSI20_LIB)
)
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
)
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
)
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
) -> sectorisation_psy
(
sectorisation_psy
|> select(Secteur, pmsi20_code)
)
(
sectorisation_psy
|> select(Secteur, pmsi20_code)
|> write_csv("map_pmsi_secteur_psy.csv")
)
library(tidyverse)
psy <- hdfmaps::sectorisation_psy
tas <- hdfmaps::découpage_TAS
library(tidyverse)
psy <- hdfmaps::sectorisation_psy
tas <- hdfmaps::découpage_TAS
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
) -> sectorisation_psy
(
sectorisation_psy
|> filter()
)
(
sectorisation_psy
|> filter(`Etablissement de santé` == "EPSM DES FLANDRES")
|> pull(Secteur)
|> unique()
|> sort
)
(
sectorisation_psy
|> filter(`Etablissement de santé` == "EPSM DES FLANDRES")
|> pull(Secteur)
|> unique()
|> sort()
)
setwd("~/")
devtools::install("~/Analyses/Server_Shiny_Restitution/utils/hdfmaps/")
keyboardShortcutAddin:::cd_to_sub()
cd("./Analyses/Pierre BOUSSEMART/20240122_EPSM_FLANDRES/")
file.edit("codes_communes_secteurs_EPSM_FLANDRES.R")
library(tidyverse)
psy <- hdfmaps::sectorisation_psy
tas <- hdfmaps::découpage_TAS
(
psy
|> left_join(tas, by = c("Code commune" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
|> unique()
) -> sectorisation_psy
(psy <- hdfmaps::sectorisation_psy)
library(tidyverse)
(psy <- hdfmaps::sectorisation_psy)
(tas <- hdfmaps::découpage_TAS)
(
psy
|> left_join(tas, by = c("COD_COM" = "COM23_CODE"))
|> select(`Etablissement de santé`,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
|> unique()
) -> sectorisation_psy
(
psy
|> left_join(tas, by = c("COD_COM" = "COM23_CODE"))
|> select(ES,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
|> unique()
) -> sectorisation_psy
(
sectorisation_psy
|> filter(pmsi20_code == "59C05")
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES")
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES")
|> pull(pmsi20_code)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES")
|> pull(pmsi20_code)
|> unique()
)
keyboardShortcutAddin:::switch_between_projects()
file.edit("data-raw/communes_sectorisation_psy.R")
library(readxl)
library(tidyverse)
sectorisation_psy <-
read_excel("data-raw/data_sources/psy_communes_par_secteur.xlsx")
table(sectorisation_psy$`Etablissement de santé`)
((
sectorisation_psy
|> rename(ES = `Etablissement de santé`,
COD_COM = `Code commune`)
|> mutate(ES = ifelse(str_detect(ES, "Douai"), "CH DOUAI",
ifelse(str_detect(ES, "Lens"), "CH LENS",
ifelse(str_detect(ES, "Agglo"), "EPSM AGGLOM. LILLOISE",
ifelse(str_detect(ES, "EPSMDA"), "EPSM Aisne", ES)))))
) -> sectorisation_psy)
((
sectorisation_psy
|> rename(ES = `Etablissement de santé`,
COD_COM = `Code commune`)
|> mutate(ES = ifelse(str_detect(ES, "Douai"), "CH DOUAI",
ifelse(str_detect(ES, "Lens"), "CH LENS",
ifelse(str_detect(ES, "Agglo"), "EPSM AGGLOM. LILLOISE",
ifelse(str_detect(ES, "EPSMDA"), "EPSM Aisne", ES)))))
|> unique()
) -> sectorisation_psy)
library(readxl)
library(tidyverse)
sectorisation_psy <-
read_excel("data-raw/data_sources/psy_communes_par_secteur.xlsx")
table(sectorisation_psy$`Etablissement de santé`)
((
sectorisation_psy
|> rename(ES = `Etablissement de santé`,
COD_COM = `Code commune`)
|> mutate(ES = ifelse(str_detect(ES, "Douai"), "CH DOUAI",
ifelse(str_detect(ES, "Lens"), "CH LENS",
ifelse(str_detect(ES, "Agglo"), "EPSM AGGLOM. LILLOISE",
ifelse(str_detect(ES, "EPSMDA"), "EPSM Aisne", ES)))))
|> unique()
) -> sectorisation_psy)
setwd("~/")
keyboardShortcutAddin:::cd_to_sub()
cd("./Analyses/Pierre BOUSSEMART/20240122_EPSM_FLANDRES/codes_communes_secteurs_EPSM_FLANDRES.R")
cd("./Analyses/Pierre BOUSSEMART/20240122_EPSM_FLANDRES/")
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES")
|> pull(pmsi20_code)
|> unique()
)
library(tidyverse)
(psy <- hdfmaps::sectorisation_psy)
(tas <- hdfmaps::découpage_TAS)
(
psy
|> left_join(tas, by = c("COD_COM" = "COM23_CODE"))
|> select(ES,
Secteur,
pmsi20_code,
PMSI20_LIB_COURT,
PMSI20_LIB)
|> unique()
) -> sectorisation_psy
(
sectorisation_psy
|> filter(pmsi20_code == "59C05")
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES")
|> pull(pmsi20_code)
|> unique()
)
(
sectorisation_psy
|> select(Secteur, pmsi20_code)
|> count(pmsi20_code)
|> arrange(desc(n))
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES")
|> pull(pmsi20_code)
|> unique()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES")
|> pull(pmsi20_code)
|> unique()
) -> communes_EPSM_FLANDRES
(
sectorisation_psy
|> filter(COD_COM %in% communes_EPSM_FLANDRES)
)
(
sectorisation_psy
|> filter(pmsi20_code %in% communes_EPSM_FLANDRES)
)
(
sectorisation_psy
|> filter(pmsi20_code %in% communes_EPSM_FLANDRES)
|> pull(ES)
|> unique()
)
(
sectorisation_psy
|> select(Secteur, pmsi20_code)
|> mutate(pedopsy = str_detect(Secteur, "I"))
|> write_csv("map_pmsi_secteur_psy.csv")
)
(
tibble(COD_COM = communes_EPSM_FLANDRES)
|> write_csv("communes_EPSM_FLANDRES.csv")
)
(
tibble(COD_COM = communes_EPSM_FLANDRES)
|> write_csv("communes_EPSM_FLANDRES.csv")
|> pinf()
)
(
sectorisation_psy
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(Secteur, pmsi20_code)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(Secteur, pmsi20_code)
|> count(pmsi20_code)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(Secteur, pmsi20_code)
|> count(pmsi20_code)
|> filter(n > 1)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(Secteur, pmsi20_code)
|> count(pmsi20_code)
|> filter(n > 1)
|> pull(pmsi20_code)
) -> communes_multi_secteurs
(
sectorisation_psy
|> filter(pmsi20_code %in% communes_multi_secteurs)
)
(
sectorisation_psy
|> filter(pmsi20_code %in% communes_multi_secteurs)
|> select(2, 3)
|> arrange(pmsi20_code)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> filter(pmsi20_code %in% communes_multi_secteurs)
|> select(2, 3)
|> arrange(pmsi20_code)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> filter(pmsi20_code %in% communes_multi_secteurs)
|> arrange(pmsi20_code)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> filter(pmsi20_code %in% communes_multi_secteurs)
|> arrange(pmsi20_code)
|> select(2:4)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> summarise(str_detect(paste0(Secteur), "5|6"))
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> mutate(str_detect(paste0(Secteur), "5|6"))
)
# |> mutate(str_detect(paste0(Secteur), "5|6"))
)
# |> mutate(str_detect(paste0(Secteur), "5|6"))
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> mutate(paste0(Secteur))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> mutate(paste0(Secteur))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> filter(pmsi20_code %in% communes_multi_secteurs)
|> arrange(pmsi20_code)
|> select(2:4)
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> mutate(paste0(Secteur))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> arrange(pmsi20_code)
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> summarise(paste0(Secteur))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> arrange(pmsi20_code)
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> summarise(paste0(Secteur))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> group_by(pmsi20_code)
|> mutate(paste0(Secteur, collapse = "|"))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> mutate(Secteur = str_sub(Secteur, 5, 5))
|> group_by(pmsi20_code)
|> mutate(paste0(Secteur, collapse = "|"))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> mutate(Secteur = str_sub(Secteur, 5, 5))
|> group_by(pmsi20_code)
|> summarise(paste0(Secteur, collapse = "|"))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> mutate(Secteur = str_sub(Secteur, 5, 5))
|> group_by(pmsi20_code)
|> summarise(Secteurs = paste0(Secteur, collapse = "|"))
## |> mutate(str_detect(paste0(Secteur), "5|6"))
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> mutate(Secteur = str_sub(Secteur, 5, 5))
|> group_by(pmsi20_code)
|> summarise(Secteurs = paste0(Secteur, collapse = "|"))
|> mutate(`G05-06` = str_detect(paste0(Secteur), "5|6"))
|> pinf()
)
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> mutate(Secteur = str_sub(Secteur, 5, 5))
|> group_by(pmsi20_code)
|> summarise(Secteurs = paste0(Secteur, collapse = "|"))
|> mutate(`G05-06` = str_detect(paste0(Secteurs), "5|6"))
|> pinf()
)
## Seul le G05-06 est non ambigu
(
sectorisation_psy
|> filter(ES == "EPSM DES FLANDRES", str_detect(Secteur, "G"))
|> select(pmsi20_code, Secteur)
|> mutate(Secteur = str_sub(Secteur, 5, 5))
|> group_by(pmsi20_code)
|> summarise(Secteurs = paste0(Secteur, collapse = "|"))
|> mutate(`G05-06` = str_detect(paste0(Secteurs), "5|6"))
|> pinf()
)
keyboardShortcutAddin:::switch_between_projects()
shiny::runApp()
keyboardShortcutAddin:::switch_between_projects()
file.edit("R/tabulator.R")
file.edit("notes.md")
keyboardShortcutAddin:::list_files_pwd()
proj_switch()
rstudioapi::openProject("~/Analyses/Activité/cartes_par_TAS_2023")
