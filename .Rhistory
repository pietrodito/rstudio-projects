cd("./Apps/draft/")
dir_delete("pkf")
dir_delete("pkg")
rhino::init("pkg")
keyboardShortcutAddin:::cd_to_sub()
cd("./pkg/")
setwd('..')
keyboardShortcutAddin:::list_files_pwd()
consoleR::install_my_packages_inside_rhino
consoleR::install_my_packages_inside_rhino("pkg/")
purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
rhino::pkg_install('dplyr')
rhino::pkg_install('abctools')
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
cd("./dilavo/")
rhino::pkg_install('readr')
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
edit_file("db_updater/probe_dir.R")
?system2
basename("/asdf/qwer/")
?file.remove
edit_file("app/logic/db_utils.R")
edit_file("app/logic/db_utils.R")
rhino::pkg_install('future')
renv::status()
renv::snapshot()
rhino::pkg_install(c('purrr', 'furrr', 'progressr'))
?furrr::future_walk
rhino::pkg_install('furrr')
rhino::pkg_remove(c('purrr', 'furrr', 'progressr'))
rhino::pkg_remove('future')
edit_file("db_updater/db_updater_utils.R")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::cd_to_sub()
tempdir()
?tempdir
keyboardShortcutAddin:::cd_to_sub()
edit_file("db_updater/db_updater_utils.R")
q()
?list.files
?future_walk
?furrr::future_walk
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
cd("./dilavo/")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
edit_file("db_updater/dispatcher.R")
q()
getwd()
source("INSTALL_MY_PACKAGES.R")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
renv::status()
edit_file("dependencies.R")
file.edit('dependencies.R')
renv::remove("purrr")
renv::remove("future")
renv::status()
renv::restore()
renv::status()
rhino::pkg_install("purrr")
renv::status()
keyboardShortcutAddin:::switch_between_projects()
library(tidyverse)
keyboardShortcutAddin:::cd_to_parent_dir()
keyboardShortcutAddin:::cd_to_sub()
cd("./tmp")
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
) -> df
champ   <- pull(df[1, ], champ  )
statut  <- pull(df[1, ], statut )
annee   <- pull(df[1, ], annee  )
periode <- pull(df[1, ], periode)
ipe     <- pull(df[1, ], ipe    )
}
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
#' @export
name_repair <- function(nm) {
make.unique(nm, sep = "_")
}
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
) -> df
champ   <- pull(df[1, ], champ  )
statut  <- pull(df[1, ], statut )
annee   <- pull(df[1, ], annee  )
periode <- pull(df[1, ], periode)
ipe     <- pull(df[1, ], ipe    )
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv(filepath, name_repair = name_repair)
# (
#   df
#   |> rename(
#     champ = Champ,
#     statut = Statut,
#     annee = Annee,
#     periode = Period,
#     ipe = IPE
#   )
# ) -> df
#
# champ   <- pull(df[1, ], champ  )
# statut  <- pull(df[1, ], statut )
# annee   <- pull(df[1, ], annee  )
# periode <- pull(df[1, ], periode)
# ipe     <- pull(df[1, ], ipe    )
df
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
) -> df
#
# champ   <- pull(df[1, ], champ  )
# statut  <- pull(df[1, ], statut )
# annee   <- pull(df[1, ], annee  )
# periode <- pull(df[1, ], periode)
# ipe     <- pull(df[1, ], ipe    )
df
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
) -> df
#
# champ   <- pull(df[1, ], champ  )
# statut  <- pull(df[1, ], statut )
# annee   <- pull(df[1, ], annee  )
# periode <- pull(df[1, ], periode)
# ipe     <- pull(df[1, ], ipe    )
df
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv(filepath, name_repair = name_repair)
# (
#   df
#   |> rename(
#     champ = Champ,
#     statut = Statut,
#     annee = Annee,
#     periode = Period,
#     ipe = IPE
#   )
# ) -> df
#
# champ   <- pull(df[1, ], champ  )
# statut  <- pull(df[1, ], statut )
# annee   <- pull(df[1, ], annee  )
# periode <- pull(df[1, ], periode)
# ipe     <- pull(df[1, ], ipe    )
df
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
df
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv2(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
) -> df
champ   <- pull(df[1, ], champ  )
statut  <- pull(df[1, ], statut )
annee   <- pull(df[1, ], annee  )
periode <- pull(df[1, ], periode)
ipe     <- pull(df[1, ], ipe    )
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv2(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
) -> df
champ   <- pull(df[1, ], champ  )
statut  <- pull(df[1, ], statut )
annee   <- pull(df[1, ], annee  )
periode <- pull(df[1, ], periode)
ipe     <- pull(df[1, ], ipe    )
df
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
df
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv2(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
|> mutate(
champ = tolower(champ)
)
) -> df
champ   <- pull(df[1, ], champ  )
statut  <- pull(df[1, ], statut )
annee   <- pull(df[1, ], annee  )
periode <- pull(df[1, ], periode)
ipe     <- pull(df[1, ], ipe    )
df
}
library(tidyverse)
df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv')
df
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv2(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
|> mutate(
champ = tolower(champ)
statut = ifelse(statut == "PUBLIC", "dgf", "oqn")
library(tidyverse)
(df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv'))
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv2(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
|> mutate(
champ = tolower(champ)
statut = ifelse(statut == "PUBLIC", "dgf", "oqn")
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv2(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
|> mutate(
champ = tolower(champ),
statut = ifelse(statut == "PUBLIC", "dgf", "oqn")
)
) -> df
champ   <- pull(df[1, ], champ  )
statut  <- pull(df[1, ], statut )
annee   <- pull(df[1, ], annee  )
periode <- pull(df[1, ], periode)
ipe     <- pull(df[1, ], ipe    )
df
}
library(tidyverse)
(df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv'))
#' @export
prepare_raw_key_value_4_db <- function(filepath) {
df <- read_csv2(filepath, name_repair = name_repair)
(
df
|> rename(
champ = Champ,
statut = Statut,
annee = Annee,
periode = Period,
ipe = IPE
)
|> mutate(
champ = tolower(champ),
statut = ifelse(statut == "PUBLIC", "dgf", "oqn")
)
) -> df
champ   <- pull(df[1, ], champ  )
statut  <- pull(df[1, ], statut )
annee   <- pull(df[1, ], annee  )
periode <- pull(df[1, ], periode)
ipe     <- pull(df[1, ], ipe    )
filename <- paste(champ, statut, annee, periode, "KV", csv, sep = ".")
write_csv(df,
pasteo( "/ovalide_data/upload/", filename))
}
library(tidyverse)
(df <- prepare_raw_key_value_4_db('~/Apps/tmp/appli_09.csv'))
keyboardShortcutAddin:::switch_between_projects()
file_move("tests/interactive/db_updater_create_file.R", "tests/interactive/db_updater_zip_ovalide_upload.R")
edit_file("tests/interactive/db_updater_key_value.R")
edit_file("tests/interactive/db_updater_zip_ovalide_upload.R")
edit_file("tests/interactive/db_updater_key_value.R")
edit_file("tests/interactive/db_updater_zip_ovalide_upload.R")
edit_file("tests/interactive/db_updater_key_value.R")
file_delete(path = "tests/interactive/db_updater_key_value.R")
edit_file("db_updater/dispatcher.R")
edit_file("app/logic/db_utils.R")
?zip
?file.copy
keyboardShortcutAddin:::cd_to_sub()
keyboardShortcutAddin:::cd_to_sub()
cd("./draft/updateDBnewColumn/")
edit_file("R/script.R")
?dbCreateTable
new_df <- data.frame(
y = 3,
z = 4,
t = 10
)
setdiff(names(new_df), cols)
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
?ifelse
purrr::pmap(types, add_col)
purrr::pmap(types, add_col)
setwd("~")
proj_add("Analyses/Repart_internat/")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::list_files_pwd()
edit_file("R/explore.R")
library(tidyverse)
library(readxl)
library(readxl)
read_excel("./data/Amiens/Amiens - RÃ©partition_SPECIALITES_MAI_2023 maj au 09.03.23.xlsx")
read_excel("./data/Amiens/Amiens - RÃ©partition_SPECIALITES_MAI_2023 maj au 09.03.23.xlsx",
sheet = 2)
read_excel("./data/Amiens/Amiens - RÃ©partition_SPECIALITES_MAI_2023 maj au 09.03.23.xlsx",
sheet = 2,
skip = 6)
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
Fich
keyboardShortcutAddin:::switch_between_projects()
(
"./data/Amiens/Amiens - RÃ©partition_SPECIALITES_MAI_2023 maj au 09.03.23.xlsx"
|>  read_excel(sheet = 2, skip = 6)
)
library(tidyverse)
library(readxl)
(
"./data/Amiens/Amiens - RÃ©partition_SPECIALITES_MAI_2023 maj au 09.03.23.xlsx"
|>  read_excel(sheet = 2, skip = 6)
)
(
"data/Amiens/Amiens - Tableau de rÃ©partition Dr JUNIOR MAI 2023 au 10.02.2023.xlsx"
|>  read_excel(sheet = 1, skip = 2)
)
(
"data/Amiens/Amiens - Tableau de rÃ©partition Dr JUNIOR MAI 2023 au 10.02.2023.xlsx"
|>  read_excel(sheet = 1, skip = 1)
)
(
"data/Amiens/Amiens - Tableau de rÃ©partition Dr JUNIOR MAI 2023 au 10.02.2023.xlsx"
|>  read_excel(sheet = 1, skip = 1)
) -> df
colnames(df)
cols <- colnames(df)
cols <- colnames(df)
col_values <- function(col) { unique(df[[col]]) }
map(cols, col_values)
(
"data/Amiens/Amiens - Tableau de rÃ©partition Dr JUNIOR MAI 2023 au 10.02.2023.xlsx"
|>  read_excel(sheet = 1, skip = 1)
) -> df
df
((
"data/Amiens/Amiens - Tableau de rÃ©partition Dr JUNIOR MAI 2023 au 10.02.2023.xlsx"
|>  read_excel(sheet = 1, skip = 1)
) -> df)
((
"data/Amiens/Amiens - Tableau de rÃ©partition Dr JUNIOR MAI 2023 au 10.02.2023.xlsx"
|>  read_excel(sheet = 1, skip = 1)
) -> df)
(
df
|> select(2, 4, 5)
)
(
df
|> select(2, 4, 5)
|> arrange(2, 3, 1)
)
(
df
|> select(2, 4, 5)
|> arrange(`NOM DE L'ETABLISSEMENT`,
`NOM DU SERVICE`,
`SPECIALITE (DES/DESC)`)
)
(
df
|> select(2, 4, 5)
|> arrange(`NOM DE L'ETABLISSEMENT`,
`NOM DU SERVICE`,
`SPECIALITE (DES/DESC)`)
) |> print(n = Inf)
(
df
|> select(2, 4, 5)
|> arrange(`NOM DE L'ETABLISSEMENT`,
`NOM DU SERVICE`,
`SPECIALITE (DES/DESC)`)
) |> pinf()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::list_files_pwd()
edit_file("app/logic/db_utils.R")
q()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::list_files_pwd()
edit_file("db_updater/db_updater_utils.R")
edit_file("db_updater/dispatcher.R")
edit_file("db_updater/probe_dir.R")
edit_file("db_updater/db_updater_utils.R")
edit_file("../../Apps/draft/updateDBnewColumn/R/script.R")
keyboardShortcutAddin:::switch_between_projects()
keyboardShortcutAddin:::list_files_pwd()
keyboardShortcutAddin:::switch_between_projects()
file_delete("app/logic/ovalide_utils.R")
keyboardShortcutAddin:::switch_between_projects()
library(tidyverse)
read_csv2("appli_09.csv")
read_csv2("appli_09.csv", locale = locale(encoding = "UTF-8"))
read_csv2("appli_09.csv", locale = locale(encoding = "UTF-8"))
file_move("appli_09.csv", "R/")
q()
