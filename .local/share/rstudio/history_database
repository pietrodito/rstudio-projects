1695740151343:source("~/INSTALL_MY_PACKAGES.R")
1695740218884:library(consoleR)
1695740246704:cd()
1695740603785:\
1695740615615:keyboardShortcutAddin:::cd_to_sub()
1695740626450:dir_create("Apps")
1695740627395:keyboardShortcutAddin:::cd_to_sub()
1695740630188:cd("./Apps/")
1695740659734:rhino::init("dilavo")
1695740698286:setwd("dilavo/")
1695740717927:renv::status()
1695740738972:renv::install("echarts4r")
1695740810846:renv::install("~/my_packages/consoleR/")
1695740917594:renv::install("~/my_packages/keyboardShortcutAddin/")
1695740932274:file.edit(".Rprofile")
1695741193059:keyboardShortcutAddin:::list_files_pwd()
1695741203192:..
1695741204056:keyboardShortcutAddin:::cd_to_parent_dir()
1695741239520:rhino::init("ApplyMyPkgs")
1695741274983:library(consoleR)
1695741358991:edit_rstudio_snippets()
1695741585055:edit_file("~/my_packages/consoleR/R/install_my_packages_inside_rhino.R")
1695741934755:dir_ls("~/my_packages/")
1695742064712:keyboardShortcutAddin:::build_a_project()
1695742071060:keyboardShortcutAddin:::switch_between_projects()
1695742114746:proj_add("~/my_packages/consoleR/")
1695742121245:proj_add("~/my_packages/keyboardShortcutAddin")
1695742124212:keyboardShortcutAddin:::switch_between_projects()
1695742127358:keyboardShortcutAddin:::build_a_project()
1695742234117:install_my_packages_inside_rhino("ApplyMyPkgs/")
1695742245525:keyboardShortcutAddin:::build_a_project()
1695742263456:install_my_packages_inside_rhino("ApplyMyPkgs/")
1695742297438:purrr::walk(fs::dir_ls("~/my_packages/"),
1695742297447:~ renv::install(.)
1695742319478:purrr::walk(fs::dir_ls("~/my_packages/"),
1695742319487:~ renv::install(.))
1695742363444:keyboardShortcutAddin:::list_files_pwd()
1695742376389:cli::cat_boxx("asdf", "*")
1695742383458:cli::cat_boxx("asdf", "Title")
1695742389847:cli::cat_boxx("asdf", "Title", 'asdf')
1695742396265:cli::cat_boxx("asdf", "Title", "bottom")
1695742407723:cli::cat_boxx("Restart with CTRL+F10 and then,\n,
1695742407732:copy and paste the following in the console:")
1695742421943:cli::cat_boxx("Restart with CTRL+F10 and then copy and paste the following in the console:")
1695742766839:cli::cat_boxx(
1695742766847:"Restart with CTRL+F10, then paste content of clipboard:",
1695742766848:"Clipboard updated",
1695742766848:"clipboard content:")
1695742800912:cli::cat_boxx(
1695742800913:"Restart with CTRL+F10, then paste content of clipboard:",
1695742800914:"Clipboard updated",
1695742800914:" ↓ clipboard content ↓ ")
1695742814625:keyboardShortcutAddin:::build_a_project()
1695742827663:..
1695742829387:keyboardShortcutAddin:::cd_to_parent_dir()
1695742841835:install_my_packages_inside_rhino("ApplyMyPkgs/")
1695742887832:cli::cat_boxx(
1695742887840:"Restart with CTRL+F10, then paste content of clipboard",
1695742887841:"Clipboard updated",
1695742887842:" ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ clipboard content ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ")
1695742898487:cli::cat_boxx(
1695742898488:"Restart with CTRL+F10, then paste content of clipboard",
1695742898489:"Clipboard updated",
1695742898490:" ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ clipboard content ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ")
1695742910668:cli::cat_boxx(
1695742910676:"Restart with CTRL+F10, then paste content of clipboard",
1695742910678:"Clipboard updated",
1695742910679:"↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ clipboard content ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓")
1695742926642:keyboardShortcutAddin:::build_a_project()
1695742960499:install_my_packages_inside_rhino("ApplyMyPkgs/")
1695742964858:keyboardShortcutAddin:::cd_to_parent_dir()
1695742966125:keyboardShortcutAddin:::cd_to_parent_dir()
1695742969701:keyboardShortcutAddin:::cd_to_sub()
1695742974015:cd("./Apps/")
1695742976894:install_my_packages_inside_rhino("ApplyMyPkgs/")
1695743015190:keyboardShortcutAddin:::build_a_project()
1695743082213:keyboardShortcutAddin:::build_a_project()
1695743088543:keyboardShortcutAddin:::build_a_project()
1695743090416:keyboardShortcutAddin:::build_a_project()
1695743094282:keyboardShortcutAddin:::switch_between_projects()
1695743111600:use_package("clipr")
1695743114884:use_package("cli")
1695743120556:keyboardShortcutAddin:::build_a_project()
1695743128669:keyboardShortcutAddin:::cd_to_parent_dir()
1695743129670:keyboardShortcutAddin:::cd_to_sub()
1695743133756:keyboardShortcutAddin:::cd_to_parent_dir()
1695743135212:keyboardShortcutAddin:::cd_to_sub()
1695743140184:cd("./Apps/")
1695743150253:install_my_packages_inside_rhino(project_path = "ApplyMyPkgs/")
1695743490822:getwd()
1695743496774:setwd("~")
1695743507259:source("~/INSTALL_MY_PACKAGES.R")
1695743763784:keyboardShortcutAddin:::list_files_pwd()
1695743766623:keyboardShortcutAddin:::switch_between_projects()
1695743851416:keyboardShortcutAddin:::cd_to_sub()
1695743855798:cd("./Apps/")
1695743868839:install_my_packages_inside_rhino("ApplyMyPkgs/")
1695743905759:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695743922113:keyboardShortcutAddin:::cd_to_parent_dir()
1695743946319:rhino::init("newRhinoTest")
1695743982435:rhino::init("lastRhinoTest")
1695744001864:install_my_packages_inside_rhino("lastRhinoTest/")
1695744095297:keyboardShortcutAddin:::cd_to_parent_dir()
1695744112212:setwd("..")
1695744118952:keyboardShortcutAddin:::list_files_pwd()
1695744128876:install_my_packages_inside_rhino("lastRhinoTest/")
1695744134401:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695744145288:keyboardShortcutAddin:::list_files_pwd()
1695744151668:keyboardShortcutAddin:::list_files_pwd()
1695744153104:keyboardShortcutAddin:::list_files_pwd()
1695744155823:keyboardShortcutAddin:::cd_to_parent_dir()
1695744162806:setwd("..")
1695744170846:install_my_packages_inside_rhino("lastRhinoTest/")
1695744182364:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695744198955:keyboardShortcutAddin:::list_files_pwd()
1695744202339:keyboardShortcutAddin:::cd_to_parent_dir()
1695744203785:keyboardShortcutAddin:::cd_to_sub()
1695744207428:cd("./lastRhinoTest/")
1695744213672:keyboardShortcutAddin:::list_files_pwd()
1695744218460:renv::status()
1695744224520:keyboardShortcutAddin:::cd_to_parent_dir()
1695744242606:install_my_packages_inside_rhino("newRhinoTest/")
1695744250882:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695744272367:keyboardShortcutAddin:::list_files_pwd()
1695744276179:keyboardShortcutAddin:::cd_to_parent_dir()
1695744284605:keyboardShortcutAddin:::switch_between_projects()
1695745145551:setwd("~")
1695745179223:source("INSTALL_MY_PACKAGES.R")
1695745215624:keyboardShortcutAddin:::switch_between_projects()
1695745236090:proj_add("Apps/newRhinoTest/")
1695745238196:keyboardShortcutAddin:::switch_between_projects()
1695745245827:keyboardShortcutAddin:::list_files_pwd()
1695745250814:shiny::runApp()
1695797060115:q()
1695797081837:proj_add('~/Analyses/ENRICCO_sankey')
1695797230608:keyboardShortcutAddin:::switch_between_projects()
1695797249988:edit_file("script.R")
1695797434346:library(plotly)
1695797434519:library(tidyverse)
1695797435176:(df <- read_csv("bariatric_sankey.csv"))
1695797435423:simplify_labels <- function(col) {
1695797437248:col
1695797437556:|> str_remove("Gastric ")
1695797437829:|> str_remove(" gastrectomy")
1695797438084:lightgrey <- rgb(.75, .75, .75, .25)
1695797438362:red       <- rgb(  1,   0,   0, .25)
1695797438679:green     <- rgb(  0,   1,   0, .25)
1695797440012:library(plotly)
1695797466351:renv::init()
1695797495541:renv::init()
1695797629369:renv::install("crosstalk")
1695797644572:renv::install("lazyeval")
1695797650065:renv::init()
1695797668236:renv::install("crosstalk")
1695797673035:renv::install("lazyeval")
1695797695324:renv::init()
1695797701953:renv::install("crosstalk")
1695797738075:library(plotly)
1695797739538:library(tidyverse)
1695797741158:(df <- read_csv("bariatric_sankey.csv"))
1695797741501:simplify_labels <- function(col) {
1695797741502:(
1695797741502:col
1695797741503:|> str_remove("Adjustable gastric ")
1695797741503:|> str_remove("Gastric ")
1695797741503:|> str_remove(" gastrectomy")
1695797741503:)
1695797741504:}
1695797741880:(df$link_from <- simplify_labels(df$link_from))
1695797742199:(df$link_to   <- simplify_labels(df$link_to  ))
1695797742426:(nodes <- c(df$link_from, df$link_to) |> unique())
1695797742640:make_fct_then_int <- function(col) {
1695797742648:factor(col, levels = nodes) |> as.integer() - 1
1695797742648:}
1695797742852:lightgrey <- rgb(.75, .75, .75, .25)
1695797743030:red       <- rgb(  1,   0,   0, .25)
1695797743197:green     <- rgb(  0,   1,   0, .25)
1695797743418:blue      <- rgb(  0,   0,   1, .25)
1695797743644:((
1695797743652:tibble(
1695797743652:target = df$link_to,
1695797743652:source = make_fct_then_int(df$link_from),
1695797743652:value = df$N
1695797743653:)
1695797743653:|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
1695797743653:ifelse(str_detect(target, "bypass"), red,
1695797743654:ifelse(str_detect(target, "Sleeve"), green,
1695797743654:blue))),
1695797743654:target = make_fct_then_int(df$link_to))
1695797743654:) -> int_df)
1695797743849:(colors <- rep("white", 26))
1695797744058:update_node_colors <- function(pattern, color) {
1695797744066:colors[str_detect(nodes, pattern)] <<- color
1695797744066:}
1695797744253:update_node_colors("banding", blue)
1695797744419:update_node_colors("bypass", red)
1695797744582:update_node_colors("Sleeve", green)
1695797744735:update_node_colors("No", lightgrey)
1695797744876:(nodes <- ifelse(str_detect(nodes, "No"),
1695797744884:"NO MORE SURGERY",
1695797744884:nodes))
1695797745035:fig <- plot_ly(
1695797745043:type = "sankey",
1695797745043:orientation = "h",
1695797745044:node = list(
1695797745044:label = nodes,
1695797745045:color = colors,
1695797745045:pad = 15,
1695797745045:thickness = 20,
1695797745045:line = list(
1695797745046:color = "black",
1695797745046:width = 0.5
1695797745046:)
1695797745047:),
1695797745047:link = int_df
1695797745047:)
1695797745477:fig <- fig %>% layout(
1695797745485:title = "Basic Sankey Diagram",
1695797745486:font = list(
1695797745486:size = 10
1695797745486:)
1695797745487:)
1695797745712:fig
1695797836225:keyboardShortcutAddin:::list_files_pwd()
1695797933872:keyboardShortcutAddin:::list_files_pwd()
1695798075037:keyboardShortcutAddin:::list_files_pwd()
1695798079020:edit_file("R/sankey.R")
1695798340990:library(plotly)
1695798341370:library(tidyverse)
1695798345831:(df <- read_csv("bariatric_sankey.csv"))
1695798348962:(
1695798348970:df
1695798348970:)
1695798467891:1:3 > 2
1695798481656:link_step_gt_two <- function(link_to) {
1695798481664:(
1695798481664:link_to
1695798481665:|> stringr::str_sub(1, 1)
1695798481665:|> `>`(2)
1695798481665:)
1695798481665:}
1695798493094:link_step_gt_two(df$link_to)
1695798495947:link_step_gt_two <- function(link_to) {
1695798495955:(
1695798495955:link_to
1695798495956:|> stringr::str_sub(1, 1)
1695798495956:|> `>`(2)
1695798495956:)
1695798495957:}
1695798511660:link_step_gt_two <- function(link_to) {
1695798511669:(
1695798511670:link_to
1695798511670:|> stringr::str_sub(1, 1)
1695798511670:%>% `>`(2)
1695798511671:)
1695798511671:}
1695798512091:link_step_gt_two(df$link_to)
1695798543922:gt_two <- function(x) { x > 2}
1695798549587:link_step_gt_two <- function(link_to) {
1695798549595:gt_two <- function(x) { x > 2}
1695798549596:(
1695798549596:link_to
1695798549596:|> stringr::str_sub(1, 1)
1695798549597:|> gt_two()
1695798549597:)
1695798549597:}
1695798551974:link_step_gt_two <- function(link_to) {
1695798551983:gt_two <- function(x) { x > 2}
1695798551983:(
1695798551983:link_to
1695798551983:|> stringr::str_sub(1, 1)
1695798551984:|> gt_two()
1695798551984:)
1695798551984:}
1695798553212:link_step_gt_two(df$link_to)
1695799560420:library(plotly)
1695799560578:library(tidyverse)
1695799560718:(df <- read_csv("bariatric_sankey.csv"))
1695799561074:link_step_gt_two <- function(link_to) {
1695799561082:gt_two <- function(x) { x > 2}
1695799561083:(
1695799561083:link_to
1695799561083:|> stringr::str_sub(1, 1)
1695799561083:|> gt_two()
1695799561084:)
1695799561084:}
1695799561578:link_step_gt_two(df$link_to)
1695799597635:(
1695799597643:df
1695799597644:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799597644:"More than two surgeries",
1695799597644:link_to))
1695799597644:)
1695799652027:library(stringr)
1695799714038:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799732612:(
1695799732620:df
1695799732621:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799732621:"More than two surg.",
1695799732621:link_to),
1695799732622:link_to = ifelse(str_detect("No more"),
1695799732622:"No more surg.",
1695799732622:link_to))
1695799732622:)
1695799747492:(
1695799747500:df
1695799747500:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799747501:"More than two surg.",
1695799747501:link_to),
1695799747501:link_to = ifelse(str_detect(link_to, "No more"),
1695799747501:"No more surg.",
1695799747502:link_to))
1695799747502:)
1695799757414:df
1695799819240:(
1695799819241:df
1695799819241:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799819241:"More than two surg.",
1695799819242:link_to),
1695799819242:link_to = ifelse(str_detect(link_to, "No more"),
1695799819242:"No more surg.",
1695799819242:link_to))
1695799819243:|> filter( ! link_step_gt_two(link_from))
1695799819243:)
1695799855649:library(plotly)
1695799855781:library(tidyverse)
1695799855914:library(stringr)
1695799856059:(df_raw <- read_csv("bariatric_sankey.csv"))
1695799856200:link_step_gt_two <- function(link_to) {
1695799856200:gt_two <- function(x) { x > 2}
1695799856201:(
1695799856201:link_to
1695799856201:|> str_sub(1, 1)
1695799856202:|> gt_two()
1695799856202:)
1695799856202:}
1695799856503:(
1695799856511:df_raw
1695799856512:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799856512:"More than two surg.",
1695799856512:link_to),
1695799856513:link_to = ifelse(str_detect(link_to, "No more"),
1695799856513:"No more surg.",
1695799856513:link_to))
1695799856513:|> filter( ! link_step_gt_two(link_from))
1695799856514:) -> df
1695799873628:simplify_labels <- function(col) {
1695799873636:(
1695799873636:col
1695799873636:|> str_remove("Adjustable gastric ")
1695799873636:|> str_remove("Gastric ")
1695799873637:|> str_remove(" gastrectomy")
1695799873637:)
1695799873637:}
1695799874276:(df$link_from <- simplify_labels(df$link_from))
1695799874925:(df$link_to   <- simplify_labels(df$link_to  ))
1695799875450:(nodes <- c(df$link_from, df$link_to) |> unique())
1695799875904:make_fct_then_int <- function(col) {
1695799875912:factor(col, levels = nodes) |> as.integer() - 1
1695799875912:}
1695799885391:library(plotly)
1695799885607:library(tidyverse)
1695799885849:library(stringr)
1695799886042:(df_raw <- read_csv("bariatric_sankey.csv"))
1695799886234:link_step_gt_two <- function(link_to) {
1695799886242:gt_two <- function(x) { x > 2}
1695799886242:(
1695799886242:link_to
1695799886243:|> str_sub(1, 1)
1695799886243:|> gt_two()
1695799886243:)
1695799886243:}
1695799886404:(
1695799886412:df_raw
1695799886413:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799886413:"More than two surg.",
1695799886413:link_to),
1695799886413:link_to = ifelse(str_detect(link_to, "No more"),
1695799886414:"No more surg.",
1695799886414:link_to))
1695799886414:|> filter( ! link_step_gt_two(link_from))
1695799886414:) -> df
1695799889218:library(plotly)
1695799889555:library(tidyverse)
1695799889958:library(stringr)
1695799891031:(df_raw <- read_csv("bariatric_sankey.csv"))
1695799896514:(df_raw <- read_csv("data/bariatric_sankey.csv"))
1695799898558:link_step_gt_two <- function(link_to) {
1695799898567:gt_two <- function(x) { x > 2}
1695799898567:(
1695799898567:link_to
1695799898568:|> str_sub(1, 1)
1695799898568:|> gt_two()
1695799898568:)
1695799898568:}
1695799898868:(
1695799898868:df_raw
1695799898868:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695799898869:"More than two surg.",
1695799898869:link_to),
1695799898869:link_to = ifelse(str_detect(link_to, "No more"),
1695799898870:"No more surg.",
1695799898870:link_to))
1695799898870:|> filter( ! link_step_gt_two(link_from))
1695799898870:) -> df
1695799904986:simplify_labels <- function(col) {
1695799904994:(
1695799904994:col
1695799904994:|> str_remove("Adjustable gastric ")
1695799904994:|> str_remove("Gastric ")
1695799904995:|> str_remove(" gastrectomy")
1695799904995:)
1695799904995:}
1695799905304:(df$link_from <- simplify_labels(df$link_from))
1695799905637:(df$link_to   <- simplify_labels(df$link_to  ))
1695799905954:(nodes <- c(df$link_from, df$link_to) |> unique())
1695799906772:make_fct_then_int <- function(col) {
1695799906780:factor(col, levels = nodes) |> as.integer() - 1
1695799906780:}
1695799907228:lightgrey <- rgb(.75, .75, .75, .25)
1695799907628:red       <- rgb(  1,   0,   0, .25)
1695799907990:green     <- rgb(  0,   1,   0, .25)
1695799908388:blue      <- rgb(  0,   0,   1, .25)
1695799908726:((
1695799908734:tibble(
1695799908734:target = df$link_to,
1695799908734:source = make_fct_then_int(df$link_from),
1695799908735:value = df$N
1695799908735:)
1695799908735:|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
1695799908735:ifelse(str_detect(target, "bypass"), red,
1695799908735:ifelse(str_detect(target, "Sleeve"), green,
1695799908736:blue))),
1695799908736:target = make_fct_then_int(df$link_to))
1695799908736:) -> int_df)
1695799909910:(colors <- rep("white", 26))
1695799910771:update_node_colors <- function(pattern, color) {
1695799910779:colors[str_detect(nodes, pattern)] <<- color
1695799910779:}
1695799911456:update_node_colors("banding", blue)
1695799911928:update_node_colors("bypass", red)
1695799912318:update_node_colors("Sleeve", green)
1695799912755:update_node_colors("No", lightgrey)
1695799913308:(nodes <- ifelse(str_detect(nodes, "No"),
1695799913316:"NO MORE SURGERY",
1695799913316:nodes))
1695799914577:fig <- plot_ly(
1695799914585:type = "sankey",
1695799914585:orientation = "h",
1695799914586:node = list(
1695799914586:label = nodes,
1695799914586:color = colors,
1695799914587:pad = 15,
1695799914587:thickness = 20,
1695799914587:line = list(
1695799914587:color = "black",
1695799914588:width = 0.5
1695799914588:)
1695799914588:),
1695799914589:link = int_df
1695799914589:)
1695799916409:fig <- fig %>% layout(
1695799916417:title = "Basic Sankey Diagram",
1695799916418:font = list(
1695799916418:size = 10
1695799916418:)
1695799916419:)
1695799918329:fig
1695799986861:simplify_labels <- function(col) {
1695799986869:(
1695799986869:col
1695799986869:|> str_remove("Adjustable gastric ")
1695799986869:|> str_remove("Gastric ")
1695799986870:|> str_remove(" gastrectomy")
1695799986870:)
1695799986870:}
1695799987042:(df$link_from <- simplify_labels(df$link_from))
1695799987197:(df$link_to   <- simplify_labels(df$link_to  ))
1695799987349:(nodes <- c(df$link_from, df$link_to) |> unique())
1695799987508:make_fct_then_int <- function(col) {
1695799987516:factor(col, levels = nodes) |> as.integer() - 1
1695799987516:}
1695799987627:lightgrey <- rgb(.75, .75, .75, .25)
1695799987777:red       <- rgb(  1,   0,   0, .25)
1695799987923:green     <- rgb(  0,   1,   0, .25)
1695799988214:blue      <- rgb(  0,   0,   1, .25)
1695799988374:((
1695799988382:tibble(
1695799988382:target = df$link_to,
1695799988383:source = make_fct_then_int(df$link_from),
1695799988383:value = df$N
1695799988383:)
1695799988383:|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
1695799988383:ifelse(str_detect(target, "bypass"), red,
1695799988384:ifelse(str_detect(target, "Sleeve"), green,
1695799988384:blue))),
1695799988384:target = make_fct_then_int(df$link_to))
1695799988384:) -> int_df)
1695799988533:(colors <- rep("white", 26))
1695799988687:update_node_colors <- function(pattern, color) {
1695799988695:colors[str_detect(nodes, pattern)] <<- color
1695799988695:}
1695799988859:update_node_colors("banding", blue)
1695799988982:update_node_colors("bypass", red)
1695799989169:update_node_colors("Sleeve", green)
1695799989352:update_node_colors("More", lightgrey)
1695799989680:update_node_colors("No", lightgrey)
1695799990013:fig <- plot_ly(
1695799990021:type = "sankey",
1695799990022:orientation = "h",
1695799990022:node = list(
1695799990022:label = nodes,
1695799990023:color = colors,
1695799990023:pad = 15,
1695799990023:thickness = 20,
1695799990024:line = list(
1695799990024:color = "black",
1695799990024:width = 0.5
1695799990025:)
1695799990025:),
1695799990025:link = int_df
1695799990026:)
1695799990486:fig <- fig %>% layout(
1695799990487:title = "Basic Sankey Diagram",
1695799990487:font = list(
1695799990488:size = 10
1695799990488:)
1695799990488:)
1695799991133:fig
1695800081306:library(plotly)
1695800081520:library(tidyverse)
1695800081709:(df <- read_csv("bariatric_sankey.csv"))
1695800081951:simplify_labels <- function(col) {
1695800081959:(
1695800081959:col
1695800081959:|> str_remove("Adjustable gastric ")
1695800081960:|> str_remove("Gastric ")
1695800081960:|> str_remove(" gastrectomy")
1695800081960:)
1695800081960:}
1695800087790:library(plotly)
1695800087990:library(tidyverse)
1695800088136:library(stringr)
1695800088243:(df_raw <- read_csv("data/bariatric_sankey.csv"))
1695800088575:link_step_gt_two <- function(link_to) {
1695800088584:gt_two <- function(x) { x > 2}
1695800088584:(
1695800088584:link_to
1695800088585:|> str_sub(1, 1)
1695800088585:|> gt_two()
1695800088585:)
1695800088586:}
1695800088880:(
1695800088889:df_raw
1695800088889:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695800088889:"More than two surg.",
1695800088889:link_to),
1695800088890:link_to = ifelse(str_detect(link_to, "No more"),
1695800088890:"No more surg.",
1695800088890:link_to))
1695800088891:|> filter( ! link_step_gt_two(link_from))
1695800088891:) -> df
1695800093951:simplify_labels <- function(col) {
1695800093959:(
1695800093960:col
1695800093960:|> str_remove("Adjustable gastric ")
1695800093960:|> str_remove("Gastric ")
1695800093960:|> str_remove(" gastrectomy")
1695800093961:)
1695800093961:}
1695800094196:(df$link_from <- simplify_labels(df$link_from))
1695800094397:(df$link_to   <- simplify_labels(df$link_to  ))
1695800094605:(nodes <- c(df$link_from, df$link_to) |> unique())
1695800094736:make_fct_then_int <- function(col) {
1695800094744:factor(col, levels = nodes) |> as.integer() - 1
1695800094744:}
1695800094883:lightgrey <- rgb(.75, .75, .75, .25)
1695800095019:red       <- rgb(  1,   0,   0, .25)
1695800095166:green     <- rgb(  0,   1,   0, .25)
1695800095314:blue      <- rgb(  0,   0,   1, .25)
1695800095463:((
1695800095593:target = df$link_to,
1695800095742:value = df$N
1695800095869:|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
1695800096150:(colors <- rep("white", 26))
1695800096300:update_node_colors <- function(pattern, color) {
1695800096308:colors[str_detect(nodes, pattern)] <<- color
1695800096308:}
1695800096437:update_node_colors("banding", blue)
1695800096590:update_node_colors("bypass", red)
1695800096734:update_node_colors("Sleeve", green)
1695800096875:update_node_colors("More", lightgrey)
1695800097012:update_node_colors("No", lightgrey)
1695800097161:fig <- plot_ly(
1695800097169:type = "sankey",
1695800097169:orientation = "h",
1695800097170:node = list(
1695800097170:label = nodes,
1695800097170:color = colors,
1695800097171:pad = 15,
1695800097171:thickness = 20,
1695800097171:line = list(
1695800097172:color = "black",
1695800097172:width = 0.5
1695800097172:)
1695800097172:),
1695800097173:link = int_df
1695800097173:)
1695800097323:fig <- fig %>% layout(
1695800097331:title = "Basic Sankey Diagram",
1695800097331:font = list(
1695800097332:size = 10
1695800097332:)
1695800097332:)
1695800097854:fig
1695800105782:library(plotly)
1695800105965:library(tidyverse)
1695800106124:library(stringr)
1695800106259:(df_raw <- read_csv("data/bariatric_sankey.csv"))
1695800106423:link_step_gt_two <- function(link_to) {
1695800106424:gt_two <- function(x) { x > 2}
1695800106424:(
1695800106425:link_to
1695800106425:|> str_sub(1, 1)
1695800106425:|> gt_two()
1695800106426:)
1695800106426:}
1695800106646:(
1695800106654:df_raw
1695800106654:|> mutate(link_to = ifelse(link_step_gt_two(link_to),
1695800106655:"More than two surg.",
1695800106655:link_to),
1695800106655:link_to = ifelse(str_detect(link_to, "No more"),
1695800106655:"No more surg.",
1695800106656:link_to))
1695800106656:|> filter( ! link_step_gt_two(link_from))
1695800106656:) -> df
1695800108673:simplify_labels <- function(col) {
1695800108681:(
1695800108681:col
1695800108682:|> str_remove("Adjustable gastric ")
1695800108682:|> str_remove("Gastric ")
1695800108682:|> str_remove(" gastrectomy")
1695800108682:)
1695800108683:}
1695800109406:(df$link_from <- simplify_labels(df$link_from))
1695800110011:(df$link_to   <- simplify_labels(df$link_to  ))
1695800110391:(nodes <- c(df$link_from, df$link_to) |> unique())
1695800110824:make_fct_then_int <- function(col) {
1695800110832:factor(col, levels = nodes) |> as.integer() - 1
1695800110832:}
1695800111340:lightgrey <- rgb(.75, .75, .75, .25)
1695800111822:red       <- rgb(  1,   0,   0, .25)
1695800112201:green     <- rgb(  0,   1,   0, .25)
1695800112463:blue      <- rgb(  0,   0,   1, .25)
1695800112692:((
1695800112999:target = df$link_to,
1695800134159:((
1695800134160:tibble(
1695800134160:target = df$link_to,
1695800134160:source = make_fct_then_int(df$link_from),
1695800134160:value = df$N
1695800134161:)
1695800134161:|> mutate(color = ifelse(str_detect(target, "No"), lightgrey,
1695800134161:ifelse(str_detect(target, "bypass"), red,
1695800134161:ifelse(str_detect(target, "Sleeve"), green,
1695800134162:ifelse(str_detect(target, "banding"), blue,
1695800134162:lightgrey)))),
1695800134162:target = make_fct_then_int(df$link_to))
1695800134162:) -> int_df)
1695800135523:(colors <- rep("white", 26))
1695800135873:update_node_colors <- function(pattern, color) {
1695800135874:colors[str_detect(nodes, pattern)] <<- color
1695800135874:}
1695800136238:update_node_colors("banding", blue)
1695800136533:update_node_colors("bypass", red)
1695800136690:update_node_colors("Sleeve", green)
1695800136843:update_node_colors("More", lightgrey)
1695800136990:update_node_colors("No", lightgrey)
1695800137164:fig <- plot_ly(
1695800137172:type = "sankey",
1695800137173:orientation = "h",
1695800137173:node = list(
1695800137174:label = nodes,
1695800137174:color = colors,
1695800137174:pad = 15,
1695800137175:thickness = 20,
1695800137175:line = list(
1695800137175:color = "black",
1695800137176:width = 0.5
1695800137176:)
1695800137176:),
1695800137177:link = int_df
1695800137177:)
1695800137476:fig <- fig %>% layout(
1695800137484:title = "Basic Sankey Diagram",
1695800137485:font = list(
1695800137485:size = 10
1695800137485:)
1695800137485:)
1695800138235:fig
1695800324679:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695800333759:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695800342662:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695800348683:HIGH_DETAILS <- F
1695800351305:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695800416180:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695800458377:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695800754842:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695816710292:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695822685080:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695822692210:source("~/Analyses/ENRICCO_sankey/R/sankey.R", echo=TRUE)
1695822885055:q()
1695883902436:keyboardShortcutAddin:::switch_between_projects()
1695883916826:proj_remove()
1695883919594:proj_remove()
1695883924236:keyboardShortcutAddin:::switch_between_projects()
1695883928281:proj_add()
1695883931871:proj_remove()
1695883953119:proj_add("Apps/dilavo/")
1695883958952:keyboardShortcutAddin:::switch_between_projects()
1695883961035:keyboardShortcutAddin:::switch_between_projects()
1695883962668:keyboardShortcutAddin:::list_files_pwd()
1695884057632:edit_file("app/logic/db_utils.R")
1695884287704:renv::install("RPostgreSQL")
1695884598187:q()
1695884618966:q()
1695885091102:keyboardShortcutAddin:::cd_to_sub()
1695885093922:cd("./Apps/")
1695885108965:dir_create('draft')
1695885130559:keyboardShortcutAddin:::cd_to_sub()
1695885132555:cd("./draft/")
1695885151360:rhino::init("dbConnect")
1695885162537:proj_add("dbConnect/")
1695885170243:getwd()
1695885174578:proj_add("dbConnect/")
1695885176185:keyboardShortcutAddin:::switch_between_projects()
1695885206713:setwd("..")
1695885227272:consoleR::install_my_packages_inside_rhino("dbConnect/")
1695885239615:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695885252971:keyboardShortcutAddin:::list_files_pwd()
1695885286311:edit_file("app/logic/db_utils.R")
1695885379296:keyboardShortcutAddin:::list_files_pwd()
1695885389890:edit_file("README.md")
1695885555880:renv::install("RPostgreSQL")
1695886105647:shiny::runApp()
1695886126248:shiny::runApp()
1695886420673:shiny::runApp()
1695886545842:shiny::runApp()
1695886562405:edit_file("README.Rmd")
1695886576890:renv::install("RPostgres")
1695886604162:shiny::runApp()
1695886654483:shiny::runApp()
1695886670574:shiny::runApp()
1695886692566:shiny::runApp()
1695886737188:shiny::runApp()
1695886770138:shiny::runApp()
1695886813727:shiny::runApp()
1695886927511:trycatch(
1695886927519:stop(),
1695886927519:error = function(cond) {
1695886927519:message(cond)
1695886927519:}
1695886927520:)
1695886937863:tryCatch(
1695886937871:stop(),
1695886937872:error = function(cond) {
1695886937872:message(cond)
1695886937872:}
1695886937873:)
1695886949305:tryCatch(
1695886949313:stop(),
1695886949313:error = function(cond) {
1695886949314:message(cond)
1695886949314:return(1)
1695886949314:}
1695886949314:)
1695887001485:tryCatch(
1695887001493:DBIdbConnect(RPostgres::Postgres(),
1695887001494:host = "asdf",
1695887001494:port = "1234",
1695887001494:user = "qwer",
1695887001495:password = "asdf"),
1695887001495:error = function(cond) {
1695887001495:message(cond)
1695887001495:return(1)
1695887001496:}
1695887001496:)
1695887008736:tryCatch(
1695887008744:DBI::dbConnect(RPostgres::Postgres(),
1695887008744:host = "asdf",
1695887008744:port = "1234",
1695887008745:user = "qwer",
1695887008745:password = "asdf"),
1695887008745:error = function(cond) {
1695887008745:message(cond)
1695887008746:return(1)
1695887008746:}
1695887008746:)
1695887018890:tryCatch(
1695887018897:DBI::dbConnect(RPostgres::Postgres(),
1695887018898:host = "asdf",
1695887018898:port = "1234",
1695887018898:user = "qwer",
1695887018899:password = "asdf"),
1695887018899:error = function(cond) {
1695887018899:message(cond)
1695887018899:return(1)
1695887018900:}
1695887018900:)
1695887066674:library(shiny)
1695887066943:ui <- fluidPage(
1695887066951:)
1695887067218:server <- function(input, output, session) {
1695887067226:tryCatch(
1695887067226:DBI::dbConnect(RPostgres::Postgres(),
1695887067227:host = "asdf",
1695887067227:port = "1234",
1695887067227:user = "qwer",
1695887067227:password = "asdf"),
1695887067228:error = function(cond) {
1695887067228:message(cond)
1695887067228:return(1)
1695887067228:}
1695887067229:)
1695887067229:}
1695887067727:shinyApp(ui, server, options = list(
1695887067735:launch.browser = TRUE
1695887067735:))
1695887134323:source("~/.active-rstudio-document", echo=TRUE)
1695887168129:source("~/.active-rstudio-document", echo=TRUE)
1695887265266:source("~/.active-rstudio-document", echo=TRUE)
1695887352046:source("~/.active-rstudio-document", echo=TRUE)
1695887405542:shiny::runApp()
1695887953339:source("~/.active-rstudio-document", echo=TRUE)
1695887966639:source("~/.active-rstudio-document", echo=TRUE)
1695888113362:source("~/.active-rstudio-document", echo=TRUE)
1695888124672:source("~/.active-rstudio-document", echo=TRUE)
1695888186485:source("~/.active-rstudio-document", echo=TRUE)
1695888298842:source("~/.active-rstudio-document", echo=TRUE)
1695888375897:source("~/.active-rstudio-document", echo=TRUE)
1695888383696:source("~/.active-rstudio-document", echo=TRUE)
1695888400349:observeEvent(input$m, {
1695888400357:tryCatch( stop(), error = function(e) { message(e) } )
1695888400358:})
1695888427548:source("~/.active-rstudio-document", echo=TRUE)
1695888514125:tryCatch( stop(), error = function(e) { message(e) } )
1695888663351:source("~/.active-rstudio-document", echo=TRUE)
1695889072009:shiny::runApp()
1695889089464:shiny::runApp()
1695889324056:shiny::runApp()
1695889610704:source("~/Apps/draft/dbConnect/app/logic/db_utils.R", echo=TRUE)
1695889624725:shiny::runApp()
1695889908664:source("~/Apps/draft/dbConnect/app/logic/db_utils.R", echo=TRUE)
1695889926207:shiny::runApp()
1695890801391:?conditionMessage
1695891003591:shiny::runApp()
1695891034226:shiny::runApp()
1695892609471:renv::status()
1695893968419:renv::purge(package = "RPostgreSQL")
1695893995373:?uninstall
1695894028163:remove.packages("RPostgreSQL")
1695895003190:renv::clean()
1695895540373:edit_file('.Rprofile')
1695895562363:source("~/asdf")
1695895961674:renv::dependencies()
1695895976388:renv::diagnostics()
1695896035104:renv::update()
1695896048978:renv::clean()
1695896063764:renv::install()
1695896068830:renv::dependencies()
1695896087806:renv::repair()
1695901942341:renv::install("Rpostgres")
1695901954718:renv::install("RPostgres")
1695902172099:renv::snapshot()
1695902946592:renv::status()
1695902961912:renv::install("RPostgres")
1695902966740:renv::install("RPostgres")
1695902982323:renv::install("RPostgres")
1695902986145:renv::status()
1695902988759:renv::snapshot()
1695902994089:renv::repair()
1695903051202:renv::dependencies()
1695903240378:renv::repair()
1695903293721:renv::clean()
1695903331093:edit_file("app/logic/db_utils.R")
1695903819774:keyboardShortcutAddin:::cd_to_parent_dir()
1695903827817:keyboardShortcutAddin:::cd_to_parent_dir()
1695903833877:setwd("..")
1695903835227:ls
1695903859454:rhino::init("dependTest")
1695903870970:proj_add("dependTest/")
1695903879014:proj_add("dependTest/")
1695903880581:keyboardShortcutAddin:::switch_between_projects()
1695904459015:edit_file("dependencies.R")
1695904469955:getwd()
1695904477602:setwd("..")
1695904493592:q()
1695904501207:keyboardShortcutAddin:::switch_between_projects()
1695904504605:keyboardShortcutAddin:::switch_between_projects()
1695904512179:proj_remove()
1695904517834:keyboardShortcutAddin:::switch_between_projects()
1695904534504:edit_file("dependencies.R")
1695904600279:rhino::pkg_install("RPostgres")
1695904627720:renv::status()
1695904640646:renv::repair()
1695904643494:renv::status()
1695904657797:renv::diagnostics()
1695904664573:renv::dependencies()
1695904784073:renv::dependencies()
1695904793940:edit_file("app/logic/db_utils.R")
1695905583945:rhino::pkg_install("jsonlite")
1695918971841:setwd("~/Apps/draft/")
1695919093613:setwd("~/Apps/draft/")
1695919133855:rhino::init("deployTest")
1695919143104:setwd("deployTest/")
1695919158258:shiny::runApp()
1695921596405:shiny::runApp()
1695928675722:getwd()
1695928682278:q()
1695928687351:keyboardShortcutAddin:::switch_between_projects()
1695928696647:keyboardShortcutAddin:::list_files_pwd()
1695928697979:keyboardShortcutAddin:::list_files_pwd()
1695928704080:keyboardShortcutAddin:::list_files_pwd()
1695928704819:keyboardShortcutAddin:::list_files_pwd()
1695928710153:keyboardShortcutAddin:::cd_to_parent_dir()
1695928731289:setwd(".")
1695928736127:setwd("..")
1695928749516:install_my_packages_inside_rhino("dbConnect/")
1695928755851:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695928861694:q()
1695928867763:keyboardShortcutAddin:::cd_to_sub()
1695928873905:cd("./Apps/draft/")
1695928881035:install_my_packages_inside_rhino("dbConnect/")
1695928906317:renv::deactivate()
1695928913498:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695928932589:renv::activate()
1695928937506:keyboardShortcutAddin:::list_files_pwd()
1695928964617:..
1695928968481:q()
1695928976259:keyboardShortcutAddin:::cd_to_sub()
1695928983529:cd("./Apps/draft/")
1695929057592:rhino::init("deployTest")
1695929146312:install_my_packages_inside_rhino("deployTest/")
1695929174627:getwd()
1695929180338:setwd("..")
1695929207398:rhino::init("deployTest")
1695929212263:getwd()
1695929231280:install_my_packages_inside_rhino("deployTest/")
1695929242597:getwd()
1695929254702:install_my_packages_inside_rhino
1695929276561:q()
1695929292128:keyboardShortcutAddin:::cd_to_sub()
1695929296769:cd("./Apps/draft/")
1695929302704:dir_delete("deployTest/")
1695929316312:clipr::dr_clipr()
1695929342188:rhino::init("testDeploy")
1695929351108:getwd()
1695929356387:clipr::dr_clipr()
1695929363302:install_my_packages_inside_rhino
1695929381401:setwd("testDeploy/")
1695929392680:clipr::dr_clipr()
1695929413172:keyboardShortcutAddin:::cd_to_parent_dir()
1695929427230:setwd("..")
1695929429050:keyboardShortcutAddin:::cd_to_parent_dir()
1695929440257:keyboardShortcutAddin:::cd_to_parent_dir()
1695929441464:keyboardShortcutAddin:::cd_to_sub()
1695929446593:cd("./draft/")
1695929453754:install_my_packages_inside_rhino("testDeploy/")
1695929463130:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695929504215:q()
1695929523127:keyboardShortcutAddin:::cd_to_sub()
1695929529359:cd("./Apps/draft/")
1695929536791:dir_delete("testDeploy/")
1695929547554:rhino::init("someDeploy")
1695929565478:keyboardShortcutAddin:::cd_to_parent_dir()
1695929566623:keyboardShortcutAddin:::cd_to_sub()
1695929576554:cd("./draft")
1695929617301:keyboardShortcutAddin:::cd_to_sub()
1695929621185:cd("./someDeploy/")
1695929632471:install_my_packages_inside_rhino
1695929655254:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695929794919:q()
1695929804749:keyboardShortcutAddin:::cd_to_sub()
1695929807706:keyboardShortcutAddin:::build_a_project()
1695929811781:keyboardShortcutAddin:::switch_between_projects()
1695929813941:keyboardShortcutAddin:::cd_to_sub()
1695929820129:cd("./Apps/draft/")
1695929830129:dir_delete("someDeploy")
1695929843683:rhino::init("someD")
1695929869264:getwd()
1695929878920:keyboardShortcutAddin:::list_files_pwd()
1695929890306:install_my_packages_inside_rhino("someD/")
1695929977777:clipr::dr_clipr()
1695930237964:q()
1695930265413:clipr::dr_clipr()
1695930444538:clipr::dr_clipr()
1695931176569:clipr::dr_clipr()
1695931184724:clipr::dr_clipr()
1695931242829:system("echo $DISPLAY")
1695931247331:clipr::dr_clipr()
1695931263887:dr_clip
1695931271180:clipr::dr_clip
1695931276785:clipr::dr_clipr
1695931316076:clipr::dr_clipr
1695931350450:clipr::dr_clipr
1695931355466:clipr::dr_clipr()
1695931411374:install.packages(c("arrow", "askpass", "classInt", "credentials", "dplyr", "duckdb", "knitr", "labeling", "leafem", "leaflet", "lidR", "mvtnorm", "openssl", "packrat", "pkgload", "prettyunits", "RcppArmadillo", "rematch", "renv", "rmarkdown", "rsconnect", "spatstat.explore", "spatstat.geom", "spatstat.model", "spatstat.random", "stars", "terra", "tmap", "units", "wk"))
1695931579995:source("INSTALL_MY_PACKAGES.R")
1695931611836:keyboardShortcutAddin:::list_files_pwd()
1695931620247:clipr::dr_clipr()
1695931634785:q()
1695931744984:clipr::dr_clipr()
1695931796026:system("echo $DISPLAY")
1695931821536:clipr::dr_clipr()
1695992929786:source("INSTALL_MY_PACKAGES.R")
1695992979074:keyboardShortcutAddin:::switch_between_projects()
1695992992066:keyboardShortcutAddin:::cd_to_sub()
1695992998242:cd("./Apps/draft/")
1695993004613:dir_delete("someD/")
1695993019262:rhino::init('someD')
1695993033678:keyboardShortcutAddin:::list_files_pwd()
1695993045208:install_my_packages_inside_rhino("someD/")
1695993060567:q()
1695993082097:keyboardShortcutAddin:::list_files_pwd()
1695993085192:keyboardShortcutAddin:::cd_to_sub()
1695993089931:cd("./Apps/draft/")
1695993103486:install_my_packages_inside_rhino('someD/')
1695993130358:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1695993337141:renv::status()
1695993472877:clipr::dr_clipr()
1695993481615:clipr::dr_clipr()
1695993483511:clipr::dr_clipr()
1695993577043:clipr::dr_clipr()
1695993583042:q()
1695993588660:clipr::dr_clipr()
1695993642435:clipr::dr_clipr()
1695993646157:clipr::dr_clipr()
1695993656828:clipr::dr_clipr()
1695993667357:q()
1695993701776:clipr::dr_clipr()
1695993897270:clipr::dr_clipr()
1695998058895:clipr::dr_clipr()
1695998060476:clipr::dr_clipr()
1695998079096:system("echo $DISPLAY")
1695998303394:system("echo qwer | xclip -sel clip")
1695998314798:clipr::dr_clipr()
1695998541586:clipr::dr_clipr()
1695998542598:clipr::dr_clipr()
1695998543393:clipr::dr_clipr()
1695998550634:system("echo nonsense | xclip -sel clip")
1695998566425:q()
1695998882829:clipr::dr_clipr()
1695998884908:system("echo nonsense | xclip -sel clip")
1695998897867:clipr::dr_clipr()
1695998946332:clipr::dr_clipr()
1695998962593:q()
1696006241873:clipr::dr_clipr()
1696006243973:system("echo nonsense | xclip -sel clip")
1696006245635:clipr::dr_clipr()
1696007421261:clipr::write_clip("asdf")
1696007431519:clipr::dr_clipr()
1696007562755:q()
1696007569100:clipr::dr_clipr()
1696020658165:clipr::dr_clipr()
1696020682994:source('INSTALL_MY_PACKAGES.R')
1696020706130:install.packages(c("dbplyr", "lubridate", "polyclip"))
1696020737777:keyboardShortcutAddin:::cd_to_sub()
1696020744563:keyboardShortcutAddin:::cd_to_sub()
1696020753864:cd("./Apps/draft/")
1696020763591:dir_delete('someD/')
1696020772182:rhino::init('someD')
1696020782137:getwd()
1696020786341:keyboardShortcutAddin:::list_files_pwd()
1696020842980:install_my_packages_inside_rhino('someD/')
1696020870631:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1696021007874:keyboardShortcutAddin:::cd_to_parent_dir()
1696021015105:keyboardShortcutAddin:::cd_to_sub()
1696021018278:cd("./dbConnect/")
1696021051457:renv::status()
1696021067369:renv::restore()
1696021095191:renv::status()
1696021103137:shiny::runApp()
1696021116610:keyboardShortcutAddin:::switch_between_projects()
1696021124420:keyboardShortcutAddin:::list_files_pwd()
1696021125734:keyboardShortcutAddin:::switch_between_projects()
1696021127562:keyboardShortcutAddin:::cd_to_parent_dir()
1696021133372:setwd('..')
1696021148109:install_my_packages_inside_rhino('dbConnect/')
1696021161954:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1696021176061:keyboardShortcutAddin:::list_files_pwd()
1696021180559:keyboardShortcutAddin:::cd_to_parent_dir()
1696021194925:proj_add("dbConnect/")
1696021197061:keyboardShortcutAddin:::switch_between_projects()
1696021231310:keyboardShortcutAddin:::switch_between_projects()
1696021238875:keyboardShortcutAddin:::list_files_pwd()
1696047865621:keyboardShortcutAddin:::switch_between_projects()
1696047884629:keyboardShortcutAddin:::list_files_pwd()
1696047899702:file.edit('./.Rprofile')
1696047911267:keyboardShortcutAddin:::cd_to_parent_dir()
1696047915089:setwd('.')
1696047919590:setwd('..')
1696047934936:install_my_packages_inside_rhino('dilavo/')
1696047953413:system("echo nonsense | xclip -sel clip")
1696047963591:setwd('..')
1696047969760:system("echo nonsense | xclip -sel clip")
1696047975826:install_my_packages_inside_rhino('dilavo/')
1696047984762:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1696048007315:keyboardShortcutAddin:::list_files_pwd()
1696048019724:renv::status()
1696048035204:renv::restore()
1696048043830:renv::status()
1696048107937:edit_file('~/my_packages/consoleR/R/use_rhino_dockerfile.R')
1696048219980:dir_create('~/my_packages/consoleR/ressource/')
1696048267914:file.copy("../draft/dbConnect/Dockerfile", "~/my_packages/consoleR/ressource/")
1696048616753:keyboardShortcutAddin:::cd_to_parent_dir()
1696048690131:keyboardShortcutAddin:::build_a_project()
1696048702556:keyboardShortcutAddin:::cd_to_sub()
1696048707018:cd("./draft/dbConnect/")
1696048712679:keyboardShortcutAddin:::cd_to_parent_dir()
1696048728740:dir_delete('someD/')
1696048771944:rhino::init('someD')
1696048796058:install_my_packages_inside_rhino('someD')
1696048811142:purrr::walk(fs::dir_ls("~/my_packages/"), ~ renv::install(.))
1696048825215:keyboardShortcutAddin:::list_files_pwd()
1696048833951:use_rhino_dockerfile()
1696048931326:keyboardShortcutAddin:::build_a_project()
1696048954259:renv::update()
1696049014222:use_rhino_dockerfile()
1696049022891:renv::status()
1696049075346:renv::install('~/my_packages/consoleR/')
1696049086688:renv::status()
1696049090458:use_rhino_dockerfile()
1696049240994:renv::install('~/my_packages/consoleR/')
1696049250364:use_rhino_dockerfile()
1696049255456:keyboardShortcutAddin:::build_a_project()
1696049264246:renv::install('~/my_packages/consoleR/')
1696049274196:use_rhino_dockerfile()
1696049310881:keyboardShortcutAddin:::build_a_project()
1696049316551:renv::install('~/my_packages/consoleR/')
1696049323583:use_rhino_dockerfile()
1696049338755:use_rhino_dockerfile()
1696049440124:keyboardShortcutAddin:::build_a_project()
1696049445171:renv::install('~/my_packages/consoleR/')
1696049451722:use_rhino_dockerfile()
1696049558923:keyboardShortcutAddin:::list_files_pwd()
1696049584763:keyboardShortcutAddin:::list_sub_dir()
1696049587402:keyboardShortcutAddin:::list_files_pwd()
1696049588418:keyboardShortcutAddin:::list_sub_dir()
1696049629188:keyboardShortcutAddin:::build_a_project()
1696049636180:renv::install('~/my_packages/consoleR/')
1696049646599:use_rhino_dockerfile()
1696049824125:keyboardShortcutAddin:::list_files_pwd()
1696049832179:keyboardShortcutAddin:::cd_to_parent_dir()
1696049834569:keyboardShortcutAddin:::cd_to_parent_dir()
1696049902493:path_package("stats")
1696049912046:path_package("stats", letters)
1696049924124:path_package("stats")
1696049936474:dir_ls(path.package("stats"))
1696049950515:path_package("stats", c("INDEX", "NAMESPACE"))
1696050017973:file.copy("draft/dbConnect/.dockerignore", "~/my_packages/consoleR/inst/extdata/rhino/")
1696050036147:dir_create("~/my_packages/consoleR/inst/extdata/rhino")
1696050038060:file.copy("draft/dbConnect/.dockerignore", "~/my_packages/consoleR/inst/extdata/rhino/")
1696050053227:file_delete('~/my_packages/consoleR/inst/extdata/rhino_dockerfile')
1696050064867:file.copy("draft/dbConnect/Dockerfile", "~/my_packages/consoleR/inst/extdata/rhino/")
1696050068869:keyboardShortcutAddin:::build_a_project()
1696050077373:keyboardShortcutAddin:::list_files_pwd()
1696050080627:keyboardShortcutAddin:::cd_to_sub()
1696050088077:cd("./draft/someD/")
1696050100741:use_rhino_dockerfile()
1696050142971:keyboardShortcutAddin:::build_a_project()
1696050156286:renv::install('~/my_packages/consoleR/')
1696050162502:use_rhino_dockerfile()
